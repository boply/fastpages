{
  
    
        "post0": {
            "title": "Rapid API",
            "content": "TBD .",
            "url": "https://boply.github.io/fastpages/jupyter/week-6/2022/09/28/RapidAPI.html",
            "relUrl": "/jupyter/week-6/2022/09/28/RapidAPI.html",
            "date": " • Sep 28, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Java Image Arrays",
            "content": "Mona Lisa and Pumpkin to Text (ASCII) . import java.awt.Color; import java.awt.image.BufferedImage; import java.awt.Image; import java.awt.Graphics2D; import java.io.File; import java.io.FileWriter; import java.io.IOException; import java.io.PrintWriter; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import javax.imageio.stream.ImageOutputStream; import javax.imageio.stream.ImageInputStream; import javax.imageio.metadata.IIOMetadata; import javax.imageio.IIOImage; import javax.imageio.ImageIO; import javax.imageio.ImageWriteParam; import javax.imageio.ImageWriter; import javax.imageio.ImageReader; import javax.imageio.ImageTypeSpecifier; public class Pics { private final String inDir = &quot;images/&quot;; // location of images private final String outDir = &quot;images/tmp/&quot;; // location of created files private String inFile; private String resizedFile; private String asciiFile; private String ext; // extension of file private long bytes; private int width; private int height; // Constructor obtains attributes of picture public Pics(String name, String ext) { this.ext = ext; this.inFile = this.inDir + name + &quot;.&quot; + ext; this.resizedFile = this.outDir + name + &quot;.&quot; + ext; this.asciiFile = this.outDir + name + &quot;.txt&quot;; this.setStats(); } // An image contains metadata, namely size, width, and height public void setStats() { BufferedImage img; try { Path path = Paths.get(this.inFile); this.bytes = Files.size(path); img = ImageIO.read(new File(this.inFile)); this.width = img.getWidth(); this.height = img.getHeight(); } catch (IOException e) { } } // Console print of data public void printStats(String msg) { System.out.println(msg + &quot;: &quot; + this.bytes + &quot; &quot; + this.width + &quot;x&quot; + this.height + &quot; &quot; + this.inFile); } // Convert scaled image into buffered image public static BufferedImage convertToBufferedImage(Image img) { // Create a buffered image with transparency BufferedImage bi = new BufferedImage( img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB); // magic? Graphics2D graphics2D = bi.createGraphics(); graphics2D.drawImage(img, 0, 0, null); graphics2D.dispose(); return bi; } // Scale or reduce to &quot;scale&quot; percentage provided public void resize(int scale) { BufferedImage img = null; Image resizedImg = null; int width = (int) (this.width * (scale/50.0) + 0.5); int height = (int) (this.height * (scale/140.0) + 0.5); try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data // create a new BufferedImage for drawing resizedImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH); } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(resizedImg), this.ext, new File(resizedFile)); } catch (IOException e) { return; } this.inFile = this.resizedFile; // use scaled file vs original file in Class this.setStats(); } // convert every pixel to an ascii character (ratio does not seem correct) public void convertToAscii() { BufferedImage img = null; PrintWriter asciiPrt = null; FileWriter asciiWrt = null; try { File file = new File(this.asciiFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { asciiPrt = new PrintWriter(asciiWrt = new FileWriter(this.asciiFile, true)); } catch (IOException e) { System.out.println(&quot;ASCII out file create error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); double pixVal = (((col.getRed() * 0.30) + (col.getBlue() * 0.59) + (col .getGreen() * 0.11))); try { asciiPrt.print(asciiChar(pixVal)); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } try { asciiPrt.println(&quot;&quot;); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } } // conversion table, there may be better out there ie https://www.billmongan.com/Ursinus-CS173-Fall2020/Labs/ASCIIArt public String asciiChar(double g) { String str = &quot; &quot;; if (g &gt;= 240) { str = &quot; &quot;; } else if (g &gt;= 237) { str = &quot;`&quot;; } else if (g &gt;= 235) { str = &quot;.&quot;; } else if (g &gt;= 232) { str = &quot;&#39;&quot;; } else if (g &gt;= 230) { str = &quot;-&quot;; } else if (g &gt;= 227) { str = &quot;,&quot;; } else if (g &gt;= 225) { str = &quot;:&quot;; } else if (g &gt;= 222) { str = &quot; &quot;&quot;; } else if (g &gt;= 220) { str = &quot;~&quot;; } else if (g &gt;= 217) { str = &quot;^&quot;; } else if (g &gt;= 214) { str = &quot;;&quot;; } else if (g &gt;= 212) { str = &quot;!&quot;; } else if (g &gt;= 210) { str = &quot;_&quot;; } else if (g &gt;= 207) { str = &quot;*&quot;; } else if (g &gt;= 205) { str = &quot;/&quot;; } else if (g &gt;= 202) { str = &quot;(&quot;; } else if (g &gt;= 200) { str = &quot;r&quot;; } else if (g &gt;= 198) { str = &quot;)&quot;; } else if (g &gt;= 196) { str = &quot;|&quot;; } else if (g &gt;= 193) { str = &quot;+&quot;; } else if (g &gt;= 191) { str = &quot;&gt;&quot;; } else if (g &gt;= 188) { str = &quot;&lt;&quot;; } else if (g &gt;= 185) { str = &quot;]&quot;; } else if (g &gt;= 182) { str = &quot;[&quot;; } else if (g &gt;= 180) { str = &quot;l&quot;; } else if (g &gt;= 178) { str = &quot;L&quot;; } else if (g &gt;= 175) { str = &quot;Y&quot;; } else if (g &gt;= 173) { str = &quot;j&quot;; } else if (g &gt;= 170) { str = &quot;=&quot;; } else if (g &gt;= 168) { str = &quot;c&quot;; } else if (g &gt;= 165) { str = &quot;7&quot;; } else if (g &gt;= 162) { str = &quot;1&quot;; } else if (g &gt;= 160) { str = &quot;i&quot;; } else if (g &gt;= 158) { str = &quot;T&quot;; } else if (g &gt;= 156) { str = &quot;J&quot;; } else if (g &gt;= 154) { str = &quot;t&quot;; } else if (g &gt;= 152) { str = &quot;}&quot;; } else if (g &gt;= 150) { str = &quot;n&quot;; } else if (g &gt;= 147) { str = &quot;f&quot;; } else if (g &gt;= 145) { str = &quot;x&quot;; } else if (g &gt;= 143) { str = &quot;{&quot;; } else if (g &gt;= 140) { str = &quot;u&quot;; } else if (g &gt;= 138) { str = &quot;C&quot;; } else if (g &gt;= 136) { str = &quot;s&quot;; } else if (g &gt;= 133) { str = &quot;z&quot;; } else if (g &gt;= 130) { str = &quot;y&quot;; } else if (g &gt;= 128) { str = &quot;V&quot;; } else if (g &gt;= 126) { str = &quot;F&quot;; } else if (g &gt;= 124) { str = &quot;h&quot;; } else if (g &gt;= 122) { str = &quot;o&quot;; } else if (g &gt;= 120) { str = &quot;w&quot;; } else if (g &gt;= 117) { str = &quot;k&quot;; } else if (g &gt;= 115) { str = &quot;%&quot;; } else if (g &gt;= 112) { str = &quot;U&quot;; } else if (g &gt;= 110) { str = &quot;4&quot;; } else if (g &gt;= 107) { str = &quot;X&quot;; } else if (g &gt;= 105) { str = &quot;3&quot;; } else if (g &gt;= 102) { str = &quot;S&quot;; } else if (g &gt;= 100) { str = &quot;P&quot;; } else if (g &gt;= 98) { str = &quot;K&quot;; } else if (g &gt;= 96) { str = &quot;e&quot;; } else if (g &gt;= 94) { str = &quot;Z&quot;; } else if (g &gt;= 92) { str = &quot;G&quot;; } else if (g &gt;= 90) { str = &quot;H&quot;; } else if (g &gt;= 87) { str = &quot;A&quot;; } else if (g &gt;= 85) { str = &quot;5&quot;; } else if (g &gt;= 83) { str = &quot;O&quot;; } else if (g &gt;= 81) { str = &quot;D&quot;; } else if (g &gt;= 78) { str = &quot;$&quot;; } else if (g &gt;= 76) { str = &quot;d&quot;; } else if (g &gt;= 74) { str = &quot;0&quot;; } else if (g &gt;= 72) { str = &quot;E&quot;; } else if (g &gt;= 70) { str = &quot;Q&quot;; } else if (g &gt;= 68) { str = &quot;R&quot;; } else if (g &gt;= 66) { str = &quot;9&quot;; } else if (g &gt;= 64) { str = &quot;&amp;&quot;; } else if (g &gt;= 62) { str = &quot;6&quot;; } else if (g &gt;= 60) { str = &quot;N&quot;; } else if (g &gt;= 58) { str = &quot;M&quot;; } else if (g &gt;= 56) { str = &quot;W&quot;; } else if (g &gt;= 54) { str = &quot;B&quot;; } else if (g &gt;= 52) { str = &quot;#&quot;; } else { str = &quot;@&quot;; } return str; } // tester/driver public static void main(String[] args) throws IOException { Pics monaLisa = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); monaLisa.printStats(&quot;Original&quot;); monaLisa.resize(33); monaLisa.printStats(&quot;Scaled&quot;); monaLisa.convertToAscii(); Pics pumpkin = new Pics(&quot;pumpkin&quot;, &quot;png&quot;); pumpkin.printStats(&quot;Original&quot;); pumpkin.resize(33); pumpkin.printStats(&quot;Scaled&quot;); pumpkin.convertToAscii(); } } Pics.main(null); . Original: 499298 389x413 images/MonaLisa.png Scaled: 83108 257x101 images/tmp/MonaLisa.png Original: 39392 302x265 images/pumpkin.png Scaled: 13481 199x65 images/tmp/pumpkin.png . Print .txt File . try (BufferedReader br = new BufferedReader(new FileReader(&quot;images/tmp/MonaLisa.txt&quot;))) { String line; while ((line = br.readLine()) != null) { System.out.println(line); } System.out.println(); } try (BufferedReader br = new BufferedReader(new FileReader(&quot;images/tmp/Pumpkin.txt&quot;))) { String line; while ((line = br.readLine()) != null) { System.out.println(line); } } . ~;&#34;~!&#34;~&#34;!;;;*__|;&#34;:*^~;:;;|;^~^^^&#34;~r~^^^~(;)*JAuxd65DO$d$5D$$A5AeZOH0TOSPH4SXS4%hUkoVkkhwhyhzz}1fsY7JL1Ji==usC}{uhyyuzUKXhok3S%3PKZPZkHKSXePH5kSOdEdR$O$d$0KHQdK00&amp;0Q5Qdd$69D&amp;d$W&amp;&amp;66W9@9MN6@@d@@5@d$QM0@@B@@@@@@@@#B@R@@@@@@@WQ&amp;@@E@#@M@@W@@@B@@@@&amp;@@@@@#OG{]=l] ;^~&#34;/**!_&#34;_;&#34;!;_~~^:~,&#34;^**(~^&#34;&#34;|;~__&#34;,;(!/(]{V{5R00AAZH$dD$DG$$DAGeSZiK%SX34Uk{u44yV}iJ=Yj=jY]lJ1}[T7/Y][]]c&lt;L+&lt;YYc=7J}zJJxuJfTtJ{xf{yVohyw%S4SG$050Q&amp;AEDEER5Q95RQEORedR$Q06$6RA9R$@$@d@6@@B@@9@@@Od96NQWB@@@@@@@@@@#@B@@@BE@@@@@@Wd@#@@@@#N@@@@@@@@@@@@@@B6#9ztc +;(;[_~_;&#34;^^&#34;:&#34;!&#34;^:,~~~~(;&#34;~~!:*:~;),_^!r_x3u3D5PGeZSAXeKAAA3eKSKGXXXfyx{u1}1tsflLj[&gt;+[|&lt;]!&gt;+*^&lt;lY&#34;&lt;=r(&lt;*_)!++Y)7+j+L[]ilj=jl1c=Yn71TftiTJxxfs{xw4k4A$AZKQDD$UA$Z0OO9E&amp;059AQO69$RM$@#MB969NQB@0@B@B&amp;W&amp;#&amp;#@@@#@@#W@@B@@@@@E@WM@@B#@@6N@@@@@#@@B@@@@#$N@@@@@$@@9@Dy **!;(&#34;;;~^;~~;!&#34;;,^:^~,*_&#34;!;^~&#34;&#34;:~_;;;/!jzhkAAPU5KePGODOHAeH3kyCf}tTtLYL7&lt;1&lt;|)c++L/&lt;;!)*!++*;(!:ir!Y^[r(!^];r)Y(&lt;[j/[|+7|]]&lt;]7[[lTJYYJcii11cJciJFVyFhUXXSPSHH00Q5H$AEOEdO9QE0QQD0&amp;dREQR6d6M0BG#W9#B&amp;M#@MN@@@@@@@@@&amp;B@@WB@6@@6@@@@@@@#@@@#B@#@@@@@@@M6@B@@@Q@#@@@# *;&#34;&#34;;~^&#34;^&#34;_,&#34;,~,,,:,^&#34;,~,^~~&#34;&#34;-/:!^;!~|sFK5eZK%GDHGZ$OdeXhVC}i}Y=jl+=/lt*(//&gt;(_[~;~+);!&#34;~^&#34;**;r&#39;_c~^)~l^_~.i^_]^=&#34;1(*[_7[[&gt;&lt;+i&gt;+][fLL7jc7j1ti}JxxusuiFywh43U5K$5KQ0AAd0AdRQE90$QQ6REEdRQO#@9@3@@D6NdBB@@@@@W@@@@@@@@@#@@@@@B@@#@@@@@B@@@@@BN@@@@@@@#@@#@@@d@@@@@# ;^&#34;;^~&#34;&#34;::;&#39;-&#39;&#34;~^,,^~,-^!,,,-&#34;:*_;]*)/V3P5eSHAOODZOHKkyft1}icY77Y[r(Y~_&#34;*= *_&gt;,:]*&#34;+&#39;*(/^]!_(&lt;_*&#34;,[:_(*l([+r&lt;&#34;][&lt;;|j[!()c][L/jYlj+unYtiJT}itJ7jnf}tzifF3X%y4KUK$KDAAPOOAGA$QE5QPDRdd6M690WdE&amp;A#N#@6@M&amp;@M@@@@@@B@@@@6@B@@6KXD@0@@@@@@N@@@@@@@@B@@@M@@#@@@@@9@@@@@@ ^~&#34;:~_,~:&#34;~:&#39;&#34;&#34;^;:&#34;/^&#34;,!!&#34;~;&#34;!;^*L|^1zKO5OEdRD0OAS4kzuCTf1fi1]]]Lr!&gt;[)Yj|){;Y_&gt;+l&gt;;;_^t~*,~-&#34;,&lt;~; +/.,:-!&#34;] &gt;`-7,*~l[~^!(T!|r&lt;1^J+&lt;x)]C&gt;z]i77=c{tJfnfushowFUSZA5KAPOSE5GPHAAeS9E0RD0$9EMS@R@@D@BQ@9@#9@@@@@N@@@#@N@@@@@@@@@@@@@@W@@@#@@@&amp;@@@@#@@@W@@#@@#@@6@@@@@@ ,:&#34;:~&#34;-&#34;,&#39;&#34;&#39;-,-&#34;:):&#39;:&#34;!!~&#34;(_:*|(r|]3Xe3SHd$EGD5GXkzzfJc1j[7f1f{fzxYC)()!:&#39;n-,(::::!`~&#39;j &#39;~&#39;::&#34;;!&#39;,`+,,~,-&#39;[ ] &#39;r,::+)^^&#34;&#34;&lt;^**;=&#34;l;*7*Y1]t)YL&lt;[=C[j7}TCnsVfooFwohoXUHPOA$GHHd5DDOHE06QR9MDNB&amp;0EBMd@&amp;RM@MdB#@#@N@W9@@@@@B@@@@WBM@@@@@MBN#B@B@@E#@@@@@@E@@@@@#@@@@@W ,,,,,,,:&#39;,,,--!&#34;^!;&#34;-&#34;;&#34;]&#34;_(*_((!1oK$30KKH$DKXUooffffsszzfT1)L]l|&lt;&#34;f.^:/&#39;`*&#34; +:&#39;,~&#39;- /,:.:&#39; ,;.c,.L~&#39;&#39;:`&#34;~ (..&#34;+.-r^+~,_|_!*&#39;[;+/r&lt;&#34;|];L!&gt;&gt;)&lt;&lt;Y&lt;lLYncnJ}xxuoC3wwhkkKSkSXUKGGGG090dEEdB$6$&amp;6d$Q@&amp;@@R0B&amp;6B9@N@6@@@@@@@@M@@@#@@$@W@@W@@@5@@@BB@E@@@@#@d@@@@@9@@@@@@ ,,:&#39;*&#34;--,-,&#39;.^-,!;-,:,:&#34;_&#34;;(;[+lwoAoAGD$Gd5ek44k4yyzt[1LY]Y7(&lt;(/(!`] &#39;,:&#39; .r :^;`&#39;&#34;-. (, ~:&#34;:-&#34;~&#34;-&#34;!;~ ``&#39;; ^*`.] &#39;/!-*-^-]`*:&gt;*^&lt;|+/+[)+;||(+&lt;+j&lt;[[c=cJCx{}zysu%F3XSXkU4UKKOZKHSAQD9d#S@D&amp;WE$OQdM#@O@B@@@M#@@@NM@@@@@@@@@@@@@@6@@@@#@0@@@@@MWM@@@@@#RW@@@A@@@@@@ ;-&#39;&#34;~,&#39;&#39;,&#39;-,&#39;:&#39;~-&#34;,,^~;!])r/&gt;r=ySGA0eS5POAd$K3UyFn{==j|7&lt;]&gt;L*]|_+&#34;,[ ~: &#34;` &gt; :,^r (: &lt; _-:- :&#39;.&#34;&#34;^/ &#39;,; /. &#34;,`&#39;_ -)`.[:&#34;(!Y&#34;+~);*+;):*)![)&gt;YY&lt;Y==1i{fxtt}unskUwwZX4SXPHdDGSZA5dOA9$MO&amp;N6QQ#&amp;EMM&amp;##MR@@@N@@@@@@@@@@@#M@@@@@@@@@#@@6@B@@@@Q@@B@@@@@@@@@e@@@@@@ :::,,;&#39;-:,&#39;~^^~,,&#34;:~:+;_)/[]jVSSO$$PDREN$KASXsz71jj=&lt;Y&lt;l)]*|~*&#39;-,.&#34;/,`&#39; ., Y ; |&#39; ( )` ;^`&#39;`^ ;,^!-^ `&#39;~ `~~&#39;.|^&#39;&gt; _^`+,,/^]&#34;r^^!(&lt;^)+)r(L(&lt;+Y&lt;&lt;YL7jt=iTnu}Fow3oFhPPUw%XeO5AOZ$dDQB596@$90D69M@@@#@@@@NW@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@@@@@R@#@@@@ ,:,-&#34;&#34;&#34;:^,_:~^,::,,~^~/*+&lt;lnyU5UeR&amp;@#59SHPkFuyfTi=7L)L)&gt;*];+-^&#39;.`&#39;&#34;;:`.&#39;&#39;` |`~*:&#34;( `+ + -,/&#39;. (&#34;&#34; `_ !^,&#39;&#39;+ ;&#39;- ~&#34;.&lt; + ;:&#34;^~(;~7~/*/[/c!&gt;(++[(+&lt;&gt;l[YjjL1JtJ}fV{wyhsUXkhk4Z3AZ5SeAZddH0RRNN6$9E9QN#6@@NW&amp;@@&amp;@@@@@@@@@@@@@@@@@@@@#@@@@@@@@@N@@@@@M@@@@@@@W@@@@@# :&#39;:&#34;,,;&#34;-&#34;:&#34;&#34;^:^,~^&#34;,r!]L7=wGN@96900EQ0ZASXzTfJ7YLlYl+[&gt;_(^(/~:,: */&#34;.`` &#39;&#39;_&#39;,( ,: r `_&#34;~&#39;^^ ,_ `~* &#39;(. +``;~`! `; ` + ^,&#34;^-_&#34;&#34;+;,^_;&lt;+(///&gt;+r)&gt;|&lt;]Y=jlT=1i{x{uwzkokkV3yKSZSSAZSOODEKRE9&amp;0&amp;0&amp;QQ0N&amp;$BWN@@@@@@@@@@@@@@@#@@@@@@BQ@@@@@@@@@@@6@@@@@W@@@@@@@@@#@@@@ ,&#39;--,,-,~&#39;-:,^:&#34;^,;(**/j[fK@#NERE0M$N$AKS34hyuCcj7[Y]))(!/(;r,`.- ;,:&#34;,:,-,^ &gt;.~&#39;, ]- `/ *,/.`&#39;) ,:_--.^^ &#34;* /,^`-~&#34;;..;`^&#34;~&#34;,*-&#34;&#34;(-~;:)/&lt;;r(|__*&gt;&gt;+][YY=Yj1}}nt{skwwXohXUX3PHPAGGHZ$EFRGD$A9d9&amp;NR&amp;MR@@BRWNW@@@@9N@&amp;@@@@@#@@M@@M@@@@@@@@@@@N@B@@@&amp;@@@@@6@@@&amp;@@@@ -,`&#39;~,,:&#39;&#39;:^^&#34;~~^~*];&lt;jJX6B0A$DQR$R6WAA%UFoC{nxi=1L7=l|lr//^!!&#39;-,&#39;):&#39;&#39;,&#39;&#39;~ ( `;.- , ]_,-r &#34;/&#34;; -( .*_.&#34;,-|- &lt; :;;` ,^~&#39;,&#34;:(&#39;&#34;,&#34;_-^:&#34;_!;_*/!;_*r_((+]++[+=L[jcTtxfsCVk4UP4k%33SSeXKP$eP0u0OE&amp;d6AZR056NRW&amp;BMBMW@N@@B@@@@#@@@@@@@@@@@B@@@@@@@@@@@@@@@W@@@@@G@@@W@@@@ ,&#39;-&#39;&#39;&#39;.--&#39;,:~^:&#34;:~~^&lt;tPA%UMOR$90dRA6APK4%zuT7nti]iY&gt;|]();/~^,^:&#39;&#34; + ^,&#34;.`&#34;&#39;&#34; &gt;,&#39;`&#39; &lt;_ / `[ ^&#34;&#39;*`-;(.~&#39;! --_; `&#34;^&#39;.`~.&#34;-^~^,;,;^&#34;:,&#34;/&#34;^_);/*_/r|+|](&gt;[+jY=c7T{f}xxFozV4kyVo4USU433GSeOkOZ0$HQ$5EMW9&amp;Q$NQ#dQ6@&amp;BM9@#$#X#BB@9BD@@@M@@@@#@@@@@###@@@M@@@@@B@@@@@$6@ &#39;:.::-&#34;(-::,,&#34;:&#34;;_;yXhyw{$BE0$AE69E6SXPwwzsT{7Y1lclLj&lt;+Y;;&#34;!~:;`&#39;;&#34;.-:,:,,;&#34;-;~ `,-`~* -+ .&#39;):&#39;&#34;( &#39;!&#34;:`&#39;~ ,..*..`&gt;.&#39;::&#39;&#34;,r&#34;!&#34;|!,*-/^;/_;|(!//;/r++r&gt;&gt;[]c7[7[tt}{TCTzyuy%wkUkK3ZP%KSPK5GS5A5dP$ZZ$5ddRQR9NRMQ@@MBE@@#M#@@E@@@&amp;d6@@@@#@@B@@@@@NM&amp;WW@B@@@@@#W@@@@D@@ -&#39;,&#39;,-&#39;.-&#34;&#39;,&#39;-&#39;&#34;L7xC{}TVSz&amp;Q&amp;EQ566@NG5GUkyuJT111Y]&lt;=&lt;+=|))_*_&#34;*.,~&#39;.`&#39;&#39;,^ (, `)&#34;&#34;&#34;&#34;:&lt;&#34;. r,-,]&#39;~*r.-&gt; -&#34;:^`,`^- &#39;`/*^&#34;/;&#39;,(&#39;(::;&#34;;`^;+!)!^r^~/)!j|*[++JYlf=cj1Jc}iufxxshCkwzo%wPHVH4w5SkU44X9Gd5XHZ5dOdMdN0NE99B@Q9WW$W@B@9W@5@@E@E@&amp;B@N@@@@@@M6#W@6@@@@@@@@@@@@@@ &#39;&#39;&#39;.,&#39;&#34;&#39;!::~:,&lt;hitY1JuuukKdW9M5BQR#6AZDUVyktT1tYY&lt;]l+|[*/];(_-_,&#34;-,,.&#39;-:~ = ,..J :&#34;,+;--&lt;^;.j_`&lt;_:.7`:`,&#34;&#39; &#39;*;~,,!;,&#34;:_..r-^-,;~~&#34;^_)r/;/_&lt;~]r!Y&lt;r=[=}T==777}fiJ7Cxu{zfuVzzyuUX3SS4yeKXKeHU3PZRUA$$$E9M0QEMDRM@#W0W66#@#@@@@@M@M@@@@0#M@@@@@M@B9@@6@@@@@@@@@@@6@@ --&#39;~..,&#39;,:-&#34;^y{T]Tfff{o4kDE@Q6@#NOWddKDXHVUzsJc=ll[&gt;]]+r!(|)|^_:&#39;,,_&#34;(-&#39;;&#34;Y ~.;**!;&#39;j*&#39;(&#34;|^~:n ~+&#34;!|-. ,^&#39;.`).&lt;.!&#34;&lt;,;&#34;^*,+-;:&#34;&#34;;-^!;()|r(;j^]|&lt;]C&lt;7|Y=u7Yjj711=1tus}zzF%uhhwFU4UoyUzGsK%XA3ZeXdkDGAOdEdd&amp;9&amp;00RM0@@@B@@#@@N@@RQ@@@@@#@W#@B@@@@@B@@@@@@@B@@@@@@@@@@ `&#39;-`.&#39;&#39;-,~/}VnJffyuxsXXSX&amp;@Nd6@&amp;B0M$HUZ3%yzsx7Y=]&lt;&lt;]+(&gt;(+(&#34;)~&#39;&#34;,`&#39;.!,):~[&#34;[.;&#39;)--,~,[&#39;[;c&#34;^^&#34;(,_+.+&#34;&#39;(`&#34;!`-;&gt; ]:&#34;-],~;&#39;|:r-/^~_!&gt;*_*l+r]&gt;rlYY+[|f1|c==ccYj7L}[cTiJ71iTxVukzsVhUhyVkhG4Ue4USAHXGeK0A3ZEDe$$9E$$6NW@@@@B@@@W@@@@@@N@@@@@@@@@@@@@@@@@@&amp;@@@@@@@@@@@@@ &#34;~..&#34;-&#34;-1kytsx7}itzXoH5Q&amp;$MRQ$E6QA5QHoUwSky{}17Y])]])(&gt;&#34;)r~+~`!: .^~/[;&#34;Y-!..Y (*,:&#34;(~L&#39;&#34;|!^&#39;^*):.]&#34;+:~:_-/:r`] &#34;`/,&#34;~;&#34;.^-^:*;;*;(^/(/&lt;/~1|i*)|J[[|[Y}c7}=LcY=ciJTf}ttuTCyyuykzyu%Vkw4SXV%k4ykPkUKSK5S35ZAR$@@M9M6#@@66@E@@@W@@M@@@MW@@@@@@N@@@@@@B@@@@@@@@@@@@@ &#34;,;^~~~ckT=]Y}}x3HOHZ5P$AANA$WAdOdGSkwUhxV{nJYY=]+]r));+!^;_*!-:^&#39;~-&#39;;),))_&#34;/&#34;&#39;.((&#39;,,r!!~&#39;r.!&#39;(/`^|:]&#39;:,^&#39;,&#34;*.-.!.;&#39;,:;;-&#34;*.^!(:*^Y_*!&gt;j|&lt;&lt;+j|L&lt;T&gt;Y][lY=L&lt;xL+l[&lt;jT=Tuiui1{1wTCf{zfuoCCVFVh%oUyuozS34UXU3HHH$dQ@6WQH6@W6@@#BMWM9@9@&amp;#@$@@R@@@@B@@M6@@@@@W@@@@@@@@@ &#39;&#39;;~^/xftfJctToZ$dGR55DQH5NE0$D0$EHX%oFus{uhiixT&gt;Y&lt;|)_*r/_-,!+:&#39;*`; &#34;!|&#39;;[` Y^;&#34;-r*,*&gt;&#34;&#34;:~&gt;.!^&#39;Y +;&#34;[&#34;-(&#34;,&#39;-&#34;&#34;^.,.-;&#39;/;^,&#39;L.-:_)^!&lt;&lt;|^&gt;]*&gt;r&lt;+!T([Y+Vrc(t]LcLl]ylcicfn7}iL1itYunVuxtytzuuVuVf4VCsF%Uyh434UAKD$H$A#@B@@M@@#@B@#WW@R@@@@6@@M@@@@@@@W@@@@B@@@@@@B@@@@ ,&#39;&#34;/yk)nnh1jySd$549$AeZ$EQ95H$Q0QN5PVFUJ{Jy1}1tL]+[*)_r*:)!;_+&#34;^),(:&#34;l .*&lt;:^)&#39;;;.+:,r,&#39;&#34;^;*&#39;;;,|.r;~r&#34;-),~-;/.-&#34;.,&#39;Y,*-(. j`,&#39;&#34;|;!_&lt;,!~[(+*+)/YL&lt;=]=]ll[11&lt;)l&lt;&lt;&lt;Tl1[j7JcfliTY}=s}t}JtJhtfCk{wCzfsskzFo%UXOGD$d99BWM@@W@@WM#@#B9@0@@&amp;#W@@@@@9@@@$A@@@@@@B@@@@@@@@@ (:&lt;U=nifitL7POZP&amp;5GO5&amp;HGA$GEddA$EBXSyostf=fL&lt;fY&gt;]][;_&lt;!(*!l&#34;^!__!~!*/[^/~!&gt;/ ``,|-`,) &#39;^`;)&#39;&#34;~/&#39;*&#39;&#34;,^_)&#34;;,-*~&#39;&#34;;`&#34;`&gt; &#34;&#39;_&#39; ) &#39; +_,^;r;(**Y&gt;;));^7!+&lt;f!;=|1[&gt;[+=[]7[l&gt;L[]Li&lt;[nTjx1J{=T{7}f}tytJxunfyzhwoSXPXGdRRD5RMM@@&amp;@@@M@@&amp;@d#$B@NQBMMN@@@B@#0@@@#6@D@W@6@@@@@@ ;^ycC}ny{1xkEGe@dOEO6PXDDA@dE9D9NdGoPhhu1nj}ccfL[[(*(&lt;*&#34;r;L;*_~,]_&#34;r^l,,&#39;,r) !.L*~&#39;((:~~-r/~&#34;~&#39;^*.&#34;&#39;,. |&#39;&#34;`): | ,,`)&#39;-,+,-*_&#34;!;c!_**=;^(l*/!Yr!;L~+i*r|=Y(|=*+jn]Y7]=(LLT]l7l][LlLilT1Y[n=u7i}n{fyVykkSkXDPZd9Q$6N&amp;WMNN@@@6W@@@@A@@@@Q@@6@@@#@@@W@@@@@W@ME@@@@@@@ &#39;c{c=1=TJ7X9SS@H0ZAGdZe9N0Q&amp;9MQ0@G3kwuCfYY}[7J=[n](l]/&lt;(((*&lt;*]!)c([|/V&#39;(+^=^&#34;&#34;(&lt; !^!*&#34;&#39;_`r,^^;&#39;,**:-*-,*&#34;: L``;&#39;&#34;,&#39;)^~&#39;+,,^]&#34;&#34;^[*!_!Y):_r;|^Y(&#34;*(7;/=r[!i|*&lt;]&lt;&gt;++7jr&lt;=][i(Y]&lt;j&lt;Ll&gt;Yl71=cni}Ct}}fnfu{CyhoS3Ke&amp;$0A60E9B@E@@@@d@#@@A@@@@B@@$@@@@&amp;@@@@@@@@6MWQ@@@6@@@ +Jj7J71znuo$z@M3AKAGAPGE0EdQ0$GNRASeUssncu[=cL]|Y|!|&#34;(&#34;-(^_=,;&#34;] &#39;!*&#34;7,,&#34; Y(:*|,&#34;`&lt;&#34;] ,-`&lt;&#39;*-:&#39;):,.,!~&#39;-/&#39; [ ._`&#34;,&#39;),^,&gt;:&#34;^;[^!](_r^*+&#34;(!+!*_*:*!&#39;Y&#39;Y;r;)~__+rr][[[=J&lt;&gt;[f(+]&gt;]+[jY[Y7]YY1[YiJi7nuxCyoykU4SH505$GM$NRQNO6@#BK@#6M5N@@N@@@$@B@@G@@WR@#@#@ME@Q@@#@M@ uc&lt;jt7{x1U@SD$Mee$Z90XO990eH&amp;A$W60P4wTxVn}c1&lt;[&gt;*|&gt;*^//~/]&#34;_~~(,=&#39;&#34;!!-&#39;7&#34;_-+^^) ,--=-*,-^(+~^/;;*.,&#39;;::~&#39; ]&#34;!~&#34;;&#34;^_&#34;|&#34;~-(*^;,&gt;~^_&lt;&#34;((^|;;*_;!;^!(*;|;+_r*]|_]((|]+&lt;(]&gt;[])L&lt;]j+&gt;+(&gt;l]iT[j=t=cu=c=tx}fFsywoXK5eHE0edE0WR@QN6@9S@W#B@N@@M##@&amp;9@@@9&amp;@@&amp;@N@@@@BND@6@@B@ sjt7j1z{fh#HAdEHKEO$Q%3ZARNV9S$#65UwCf7uTjYYt+[(&lt;!;r;:;,+&#34;:&#34;,_&#39;!!*;^^:*;_!,-]-^^^:&gt;:;r&#39;:_&gt;&#39;&#34;:,^ :-*&#34;;&#34;;:-(;&#34;,;:^:_,_&#34;&#34;^^+_r/&lt;&gt;)(]&gt;&gt;&lt;+&gt;&lt;)]L]&gt;/r||(*+(&lt;]&gt;&lt;([r|+*]&gt;r+L&gt;i|1&lt;7]Yj]t[[YYc7}7x=iTcsitfCsn{shh%USDD55$ddREWN@&amp;#N&amp;@W0@@H#M5BM@@6@E@@#W5@@@@B@W@@#@MB@B@MM@ f=={]Vic1{$$SAAH5$GEF9EKS&amp;RSZ5O6M5UFofJfJf)]7[1((__!&#34;&#34;^^;_r/*/;;+(*++]^[/^_)^;;;_*:-,(~;~^,**;),:-_&#34;&#34;&#34;,&#39;,-!&#39;,;,~;*_/_((/&gt;+r[]l&lt;][tc1ll}&gt;l=[]]c&lt;L)&gt;[&lt;j&lt;++|)&lt;+&gt;r&gt;&gt;&gt;[|Yc[TYY[=]&lt;jj&lt;1Y}Y11ftTJ}n1}nxVuoFsUXU4A$$0$0$D$#W&amp;MW0BN@e@e@N@Z@@9@M@5WN#N#6W@@#@E@@@@N#R@B@@$ x=itn{yfCzkO000E0EdRkw&amp;P$E0&amp;4OGEMA4CsffciY][(|*&gt;Y((+*&#34;~**+!)+r+*)r+rr/)&lt;;/Y!+^*&#34;&gt;(^;,&lt;,~]&#34;&#39;;^^!:,^_^_&#34;&#34;,&#39;:&#34;,,!~_*))&lt;/|&lt;[==7==J1T1n1=7]7=LiLj=[c]YL+]Y&gt;[&lt;[]]l]&gt;L[[&lt;]]Y[Y[[YY7Tc7Y=thTiu4tVthnf{sFUhFwkUXUPP$d5RREQ66@@&amp;#R@WBB@KQ@9Dd6@NNM#$@#@&amp;@@W@9@B@@@@@WG#WQ@@ TctPyTsF}VuS$EQUdd000ddH5E$0C6A5QDPP%yo=YY&lt;;]+Y)=/;;~*~])())|L+)+[&lt;&lt;+[])|}&lt;|))*r&lt;*//!/&#34;^&lt;^^**|;;&#39;(~~&#39;^&#34;,-!&#34;^,r;|&lt;][7c77Y1t1ttxJfuxCnT17n7Tt1==cY[cjJ17=7=T1l77Yj1=7}i7izT=jCx}t7JCTnsuxxzxyVysxwyzw4%3X44PKDHAND$6QWN#&amp;BM@ND@d66RE656MQMMR@N@A#9QBWM@N@@B@@Z@dR0N 1sTn{Fyyzu3UeQNGOdQO0$96y#0AHGeG$K34kn11i[n]j*+*+*/+rL(&gt;L+]&gt;Jl[iY=LT=1=7T==&lt;lj&gt;=)*((!;^)&#34;/~(*l~(*/;&#34;,*:&#34;&#34;+__(|+71tifJfuisoCzzVVF{zFVzuxzfxxzftt11{Tfttftfxfn7zT}{}csnffutf}Cw{Xzywwyzhw%w%kXyChkZ4hSUk4Z3H$OH5EE&amp;W6NM@@@N@B#@M@@0@RR@6d@$&amp;@E@@BBN@R6M@#@@@B$@#d$0 77ihssSCUAhoXUXQ$9Ned00EoAHeAHOZAGP3UxtJcl&gt;[]&lt;&lt;&gt;&lt;+][LLlYl&lt;c7=7iJ1cJ}JfJJf{fn}ttc[&gt;]|*(_(;|!;cr__r_(;;(_(*7/&gt;&gt;]+jt}fCuCyuVhhhkoowokh%wyVFzouuFzVsCkuFzwFzVwFzVkxywyyVyzuFyCsw%hF4Fk%z{XwFkFPh%wUUw4kkX3K3H3AGHeK$d$&amp;R9W@@&amp;@DBSB#0N6@U@&amp;9@E6EN@X@RNDNQMBRR@@R&amp;@@QQ@ zysVV%zsSUU3PeNME543&amp;RdAoHPKHGKODAPzFzz%x77JJ[=fjc=177J7t7xssuCyCfFozC%sxCxCnF{n1=cY&lt;+&lt;_|]/r]//!l^)/))()[&gt;&gt;+[=YtJCzyVwkhUhkk%UXU4kFhwVyFe4UkookyVwwPs%4XUPGPS3hGSX3%kokXKKVkPo343ZX5kSASPXZV3ZVSUS4XyKKP33GHOOAOAE@99E@R#@ddGMWBMWRw@N6BBWW@RO@@9#WRNW@9@@O&amp;Q#&amp;@M Xutx}VyyZXAkhhZHE@eZ&amp;RRSXSde$PHGeAeoo4k{zkfFxx}Cfxx{fzzoowOX%o44yuhVhzSFkFU%Vzy{yxJf7Tj(r|/*r|!&gt;|*++&gt;](]LL]Y1TJzyy%XFkPUP%KZKeeK44Sw4Xyfz{icl[l+Y=l7l=i}}fyxw4xK$$H$A$DOSO535dA5AZ5DGeQZA3eKXKyKUPXG3SZGKOZA55OEQ6M99BR@@W@M@#@O@&amp;@WA@6@MBB@W@@@$N@R@@@H@@@@@&amp;N@W VC{syszy43kUeyGZS$GP3U9k$UPS%GPXPS3PFo4%zouoyzVUk4KXVy}}L[l[&lt;|&gt;|+(r&lt;+L]&lt;&gt;[1nJuywzxuznti[(/)+]&gt;;Y_&lt;])|&lt;&lt;]r[LY=J{FyhV3Xh%SewHXSwz4wystTT+|[Y][+n+|[|&gt;Y=7jT7t{uif{uV%k3KOEAGDQUAHZPSKA0G5DSeKZ$SXhkKXxUkUSPKSSXZeS5G$0O009&amp;E@&amp;G$@@P@@PM&amp;X@96WAN&amp;R#G5W&amp;WMR@Z###@QB#M# sF}Cy%z$e3hUPo$GX30A0O9KOXw5AHOXHGKVCCkoXo%3khoUXXsyijcT=]Y=ituntnzyVFzxJfutciTnnywkfxi=]+Lr))/&lt;!&lt;+r/|&lt;lL]ctxuzwFzF4SeXS4wZUk%y{fJj7[[J77t{nFs5X5eZG5GUe3HSH44CzwUzCw%PAPeQkRG5AG$OE$HDDP5eSwXVzFyVVhkh%kUXP5HKAGO$$EQ6QMM6B#@MQBB&amp;66XM#O9E9QRW#OM6@Q9@9B@@N9M@&amp;@ KzxkhskXzwKFAUAOS0$Z5e5$FyXeHee3UG$K%ouyVUU3oy3K%JttJCz{VkP4SKAHKkXGAe55GQwSk4hfc}J{C{ufc[Ll(/&gt;;^r*+(+[L&gt;c=VCyFX4Vkw4APXkhXozCn{JttnxCh%ko33kPd%ZX5dAOAee$s$5AGPK3SUUSXS3K3u0SZGoGKeG4SZe%wF}VF}CfzzyCUFFShUPUPZADddE&amp;6QM#MWWM6B&amp;WWWEE5&amp;&amp;99QN0R#G@6$d@$@$WMB@Q@R@ UwsVFzKH44SVSQAODAZO$ZDKDJHGG$SZ3HeUyo%fCZ4hywkVosUkUwkhunticcuGXeH4OHSAyQSGXGSXUktnT}fCnC(f(*(&#34;_(*!/*&lt;[&gt;j1h}hkk%CffydU%z}fffu{CsFsCz1YYl[]&lt;lVSSoU$DAedK9eoPPGS4hSGZeKSPXeeXHeGA%kZkkhzUVzftnJt171}tuxuyVhVPkkSeAAHG5dQ$R#6MR9E@S90PR0DNE$AMdEDWHN@9N6RNU@@RRd@B@ fXV{PU5KeAEEXHeA&amp;SedAH0ANoKHZAKA$S5hzzix}7hsFkkPXFwPyf=[L&gt;Y[=c1X0USS4SO$HekSohGkk4kF1[7{Vc&lt;1;^^;*&lt;~;*r|L&lt;jnywh4USzxw4Xhui7{VuJn}=Y&lt;)(;+r||!&lt;&gt;toOAwS4O3ZSZu4%OS%XSy3hFF4hUhhXF%VwCfufxtiiJ7J]7[[l=7TittyVxoVUSSKHDEKAdRd$@BWQ6@4@Z#K@ME@#ON@@QQ66QBGW#@@@E@@&amp;@P@@@ [sssXuPZ$HQ0$OeME5QAZO5O9EeZe35HSGAU{17=LL1]]slnnTlcLJL[&lt;*&gt;(&gt;Y&lt;7CS5Z3PU%%UVXXXkCf}f1c;&lt;7}[][^`,.~!,~_!*]Yc7xCVzzhkw%xysfi1}YLi]=//(**&#34;_/rl(]l&lt;]nk%wVZFkhyUuwzzfuTtfn}7x{Cunt=lYrY(r+(]&gt;7)&gt;l[[]]&lt;[77}nfyykwhwkXP3GH5GEdQMRRNW#@d@6QEQ#o@55QM@0VQ@@@OWW9@@@&amp;&amp;9MM5@@ YweFhH3U5P0Q53ZOXA5XP5RQNQeedeA$DGU{Cfi=l1]li11Jfcl+&gt;L*)*&#34;*_~**/l/|]&lt;(&gt;&lt;[LYj1t&gt;[[&lt;&lt;Y[+&lt;7Y+L/)&#39;^^&#34;,-;;__t)LJtTfyfhfJz{ytUt1T[[])&gt;L(+r*^r))&lt;[!)r!r|)&lt;[&lt;&lt;Y7LLc[=Y[cc7=1}1nitj1]L&lt;[c[1&lt;&lt;)7&lt;&gt;*&gt;&gt;&gt;|)]Y[cJj1uVfyuFohSSeGKSQD$E96&amp;N&amp;#696MARR@AWZ@W9N@SNWR@@B@dNN@@@M&amp;@h@6 HUuSXAZ5O$SNe9HH$$E$96QA96M%E5G$dAHF=Cc1+77l1Y{7C+|(+*&lt;r/)r**(**&gt;(&lt;lYJL1Jn}uJJc1c[Ycc]=]L|[r;^&#34;`r&#34;&#34;__!(Yc17ffTussnfJw}1}T7}L[l&lt;TcjY[]&gt;+&lt;r&lt;L|]&lt;][Y[&lt;ljllT1Li=1iJ=Yttt17Y{jJJ[Y1TlY+l&lt;]lJ_)))j])&lt;1[=cc}{ufhFzkUZPePHNR5Q9M6&amp;@#@#&amp;9BH#@6GE#N@d@@$9W4@#B@A@@NN@E@@R@@ {wkt0DKAE3AEZWFDRd99&amp;N0R9E6K0$$$5dXz}Lcxcj=&gt;=l[c]Y+|Y[]Y(]=)LllL7]7=sfuV4Vyu1=1YY&lt;|f))j/];&lt;**&#34;&lt;&#34;-|,;^)&gt;[Y1tVs{zoyszfoi}VTnuj=&gt;][n]1[[]Y]jYLL&lt;l+&lt;LYlL7Y]l7lci1f}ct7TsciulJ1]1[[&lt;j[r)|][&gt;|(|!L&gt;l&lt;=YY[c1xxufoF34PK339$dNORB6&amp;@NW@PB@#&amp;0#e@0@@4M9MEK@Bd@@A@R9@QMBM@@@ tykFVDGKWe5&amp;H&amp;ZGWS@R0$0$WRE5$M$ZD$GxT[n=l;|(;Y)&lt;&lt;((&lt;)i[j]&gt;7=nifcy}}koyCsTuL{j=Y=+&gt;(&gt;*]&gt;=r]~+|^&lt;,-),***]]Y=7y7o{{u}wYntiFJnxj=[&lt;&gt;Y*lY&lt;[7jjY=c7[JJ77n7177JitJ}hu{1t71i][&gt;r[)rj&lt;Lr]((&lt;_|/(*)r+Y&lt;]j=ji1}n}{yUwUGSGGASd9R9d#M@@#W&amp;#&amp;@DMWd@@eW@@&amp;E@#06A#&amp;@E@Bd@@@#6BN@B nVkyoNEO&amp;QOHQB9E5H&amp;B&amp;QDR@@QO0RR9QRP}1TL|+[&lt;)r)]^(/;*!*(;;+r)*[+&gt;[YjTlY[=][]|[)/(*^|*!](;[&gt;]]L&lt;]*!|&#34;_/*&gt;+L7}x7CxC}}FTh1YFjT[Tl])&gt;[!/L(&lt;[+&lt;+L[l==+ll=&gt;j=LYLY]&lt;l[|)|/);(;;)(|*rr!^(()/+]](r&lt;lL[]YYtJ7iffxzFUwoSSSOQA59QM6W&amp;@$@&amp;&amp;@E@F0@M@@5@5@@h@@Z#@#Q@Q@BD&amp;@@&amp;BNB@@ sCzhfDdPA9$ZQ0Q6XAB@$Q6MBB6Q6#&amp;9M04ut}l[lc;(|*]_//;]&#34;^**&#34;~&#34;_;;&#34;^!_])Yr]]_[*)+r~/^;l*)/=^Y__J!j *&lt;(*r(+&lt;&gt;j{7fc{}{}TyLufjkllrT)+(!&lt;;+/+&gt;*!^*r)((/]^~;~;/_!&#34;;^-,&#34;&#34;:*;^r~);_/(*!_r:(!|)]]&lt;=+]LljL=i7T1ify{koz4SHGGE$DO9N@@@B@6@#@@@@WR@@B@d@R#@XQ@WP@@NM&amp;@d#Q@#@@ME@@ oouC%k$KQdBNd6O@NAN9e9QE#6Q$WQ6OR&amp;Uyfj=+(=*|);(L**&#34;;^;!;;&#39;^,&#34;^&#34;,;^]((;(*:;*&#39;|r+!r*L_Y*=;7*)t(7&#34;&#39;&gt;^!+++&lt;&lt;7Y=[fYYT17xjTj=VY&gt;)Y&lt;&gt;&gt;//!;;!r-~^r:&lt;;:&#39;&#34;_ &#34;&#34;&#34;^;;&#39;(-.&#34;;(^)^:*+*!&#34;(;/*|+(l)YYL]l]&lt;+[Ljj=xc1}fuVuk%hwSGeKHGN5NM@N6B#B@&amp;B@@N@@K@@$E@@RR@RR@%#$B@5@@@5W@@@B%@@ %U{XyKHD@$NM6BOOA9$9$RM9#9BER3RdQEXot=c/)Y|(*^!j,!^&#34;(^~,/;;);:_._.;[^&#34;;|`,L-(;;_^~r/]!r|&lt;^(_+(j;/;^+|&gt;+&lt;1Yl[LJ&lt;j=l1jiY[Yjl&gt;Y&lt;&gt;+_;r^!~!:&#34;,~*;/-&#34;-;;,-~..(&#39;.!`,()*_,,,+;*_*r)!(r(+&gt;j[[[L7L=j71n}nf}fnuhsP3zKOPAOAZd9dMN@B@@9Q@0Q@E@@$d6DWG@&amp;@@#R@3@N9@@5@@e@B@@@@u@ PKYun3%yd6dB6NM@W0$RM@#&amp;W@Wd@MNQ$5HVzt7Y[l&lt;[[[=Y(;,!r_&#34;*&#34;r^!^.!!.- +-~,!;,/^-!^;~(&#34;=:_,_/~;;;/;/:&#34;r]r+&lt;]jYlL&lt;]Yc]JLtYlcLY7[&lt;j&gt;|;^)&#34;(^:;-&#39;!.&lt;-&#39;-,l)`&#39;:, ; ,&#34;,&#39;;!:,&#39; &#39;&#34;(&#34;!/!|*&gt;)r]]][Y=LYY&lt;}7cu}zT}{ushFyzA5KK55DZ&amp;ER@9@@BM@@@@DB@R@9@@B@S@@Bd@@W@@K@#@M0@0@@#e@@FQ wOtZKhAzdN&amp;@ND#QWD@@W@BRM@6$#@@6RGEynJ=[cc]1l+[rT_]&gt;+|(*&#34;]|+^&#39;]^&#34;!;l&lt;)&#34;^^;^|.&#34;]*;*|!(!:&gt;&#34;^*^^/^^,-r!)*&lt;&lt;][[+l]7j=1[JY&gt;]+1!=)y((/^r,^_-*(^/*;7_(: = &#39;.`,~.;~(,;+**/_(**/*!(/&gt;)[][lLY[[c]zcc7cJ}1TsCh4oXe34HH5OA&amp;ENN@W@BB@N@@@@@5M#@@B&amp;@@PB@#@90Q@#R6#Q@dBA@@6M@Q@S zyFuywhVE06NNe0@6RQD0@NNNQ@@#R9@W&amp;5XVu7J1l&lt;L|(L&gt;!r[,+^~&#34;_&#34;_~,&#39;r&#34;&#34;.,&gt;:^^_.^-^!(/(&#34;^&lt;!&#34;&#34;/_;&#39;_,,&lt;&#39;`~&#39;!_*/&lt;j&gt;[(Y[)F]+)!i&gt;L&gt;|[Y]/rr*r!&lt;^^:( ~&#39;^&#39;.^/-&#34;;`c&#39;~~*:^^~|!(~:!~~r~~[~;([&lt;][i&lt;[Y=LYY1Yc7T=tnyf}zswo3GKSeA$ER95d@N@O@@@@@$#@B$M&amp;d@d@#@6O@@k@@O5@Z6#DR@@k#@@9&amp;@HD h}t4kABWK5A06F#OB$AA6#9B69BD##E@@0AhXCn1L}+=&lt;&lt;[&gt;;l|&gt;_);&#39;+:~&#34;^:&#34;&lt;:^.r&#39;&#39;,;:|^!(&#34;^+;&gt;)&#34;^;_-)&#39;&#39;^-&#39;, :;,^^)^j&gt;+&lt;=cY(s[+1c)7]](]&gt;!=&gt;^/&#34;|_!_+_&lt;~&lt;**&#39;((|~,r;-&#39;-^!,&#34;;|*_|!;*;^&#34;;/^*&gt;+L&lt;Y&lt;cY77j7J1ciJ{f{uxywUUkUXXKSdOOKNNRBB@R@RR@NW@@O$@9kW@d@@@4@@Sd@@wWH@&amp;E@M$@@R#$WQG@ hue3Ok%WEA696UMDED0$W@O6E$0M66#9O#EPow}Jic=[]&lt;)&lt;;r_;;^*!/]&#34;,-::r,,,~;, ;,^~&#34;_/-~-7 .:-:&#39;[`.&#34;.-:`~_!;*&gt;!],J]n+i&lt;7}[[t1;^[(&lt;1_||~;^)&#34;(^^&#34;^,&gt;.;~&#34;/|;!&#39;*,,,-*&#34;^^[;!*|;(]&#34;(;|/|&lt;[1[[YY=j771c{xiunhtzV%yVX4SeeOZd&amp;K0&amp;#WB##MN@$@M@@DB&amp;Q@P@@Z$@U@$@WHM@OR#55@##h@Q#@OM@XB Swk0AEKe06OO3Wd$Q6QEQ&amp;90W0&amp;Q9&amp;#E@9&amp;@$wuJ}]]&gt;&gt;+L/*!!^(^;^*;*&#34;-&#39; &#34;L**);(,;r](/~]:::],_*~*!&lt;&#34;!&#39;&#34;;&#34;,~~)&#34;(!L(r&lt;|Y[=[[7+U)l7]][&lt;&lt;+/!&lt;,;;!;_||;~l!:[;.L&#39;&#34;,r*`~&#39;&#34;*,&#34;],::&lt;^(*;*;)r((&lt;j]L=i777iJT{zfoz{{s%hky%SPx9RDQE9A&amp;B@B@#N$@@#$@@BN@@@XW@@G@5Q@QBN69w@@S$@#Re@&amp;9@ZM&amp;@S 96K$UG$kOd6O30EME0$N0H0$4DES6WO6W@&amp;94G311Y&lt;&lt;|+|_*r^:;^^,|-&#34;,-^*`|&#39;,&lt;&#34;&gt;,^:+~_&#39;+!&#34;r&#34;^;&#34;,^&#34;;`-;;.~&#34;;&#34;|;+(7*)&lt;j_1+&gt;7=&lt;w&gt;&gt;Y7+&lt;);l/|*!_;+//j!:_&lt;~**_/)7;r,~:,:*!^&gt;^+&#34;(r!^)^((+(&gt;&gt;l+l&gt;jj177}t}fuCFVnuVwwX%kwZKZHD&amp;D9Md@M&amp;WWW5@B@@W@dB@@@#A@M@@EO@H@0@h@@@XO@QPRMEd&amp;@O9No Q4SeRy@o&amp;0Q6F&amp;0A$OE#RDRQRPZKO6&amp;@#BQRdeUsx{JL]&gt;+*_(^;/&#34;*(rr^*&#34;*(*(r,~l^,&lt;,(:/,Y&#34;+]_)_/&#34;^/(,^| ;^&#34;)&#34;;*(!7;&gt;&gt;c/}+ij1&lt;z][Y=1&lt;[|rl+/L!^l/)&gt;((+/!+|!/&#34;~&#39;&lt;,.|`:;**(;|_/+*^;(*|))[rl]l=Y71TTJ1}szuV%xo%UU4oZUH5dddM6$#N#B6@@BN@#QQ@@E@@G@@5@@%@3@@BW@W&amp;@@@WB9@WAd@@0@&amp;H@Z $94QAAPBW6E6$&amp;B@6dW99E&amp;&amp;@#@@QU@@@MBR9AZVhti==[+*((/!_;~&lt;~;+&#34;,_,&#34;-_-!,^,;;!;_!_&gt;7//+_!^;(]&#34;&#39;(_+ ],*!&#39;/(i_Y[[t[7LT=is=Tc7J1&lt;7|j+~Y;~])*|[(_Y!*+&lt;+_)!*&lt;:~_*)**r))(_)(/()r|l&lt;[[=&lt;&gt;Ti=Y1ns=tx4UfkhzS%3X3$ZS00A$MRM&amp;9@NM@@@O@@5NN@We@N66M@0B99@Z$@$@$Q@#99H@S@3@@M@DA@G wdG&amp;60H$0RE@D0&amp;6N$ED&amp;EP@Q9QM6A0Q@@M&amp;$6Pohncij[])/)*(_;^&lt;&#34;*;(/!&#34;):;&#34;^_!^__|~&lt;&#34;&lt;&#34;x*rr);^),)`&#34;~:;^(-)+/|&gt;][*&lt;=&lt;cJYjTl}jc1YtJ}ir|+&#34;&lt;^;/=*;__^)*;;!*(^*&#34;+&#39;:!+;;r+++)|r/r(+&lt;+&lt;[lY==c71n[ff}Jzy%wz%yu34k3SK$HO$0EDW@$@M#@@@M@@@@f@#@KW#WOH@B@9D@@@&amp;@@&amp;BN#@ZH@%@E@N@M@E@k U5M39$#o9dRN$EDe&amp;69BWBGQR6R@@WBBBNNM$$ZUhwTijji&gt;]+))///*^~&#34;;:&#34;&#39;~_&#34;__^(^!)(/_)+*T/]r);&#34;&gt;*/^&#39; ,! [-*^(_ri]Y]j&lt;[[]Y=&lt;n+llY7iT1L++!^)&#34;+&#34;i.~*~&gt;(+**+^_^&#34;_^*^*|(*(r([r|)&lt;(L)|[&gt;lYt7c7ininsfys{4CC%XCkoK%SSKAOM5N96RN#6#@@@W@@W@X@@NR@@@@R@@W@@z@@@&amp;&amp;Nee#BF#NM@0@9&amp;W6ZN0 6y&amp;@GAQoMNBQMQ9AdEWR9DMNM@$@@6#N&amp;@E@DG5ewyuf}7JY]7]+r*_+^^&#34;&#34;,^^~*^*&lt;*/_^r|))(&gt;jL+l((&#34;!| *&#34;^&#39;*;^,(~*;;&lt;+(&gt;l]7c7lj7&lt;x&lt;lj=1t17Cc+;-r!^-+|*(*_(_!(*j,&#34;^;&#34;;;:l!+!)(]l&lt;j]+L|LlY[17TtuTzsnn}yCsXUwoowoS$3PUAK$RdQR66R&amp;9WN@@@M@6@RW@@N@@WNE6@U@#SW#@AM@yWBBA@K@M$QBWMNZ@0 9KZQE$9o9&amp;BDP50O00&amp;5Q@MM6NB6O&amp;56&amp;B9WBGQ53zwnCTn7[j&gt;&lt;(*+(*&#34;_!^;!;r**)(|(/(r]/&lt;+}l7[Y|;&gt;,`^,*&#34;*;~&#34;_r*)&gt;&lt;cL711J}}fJi7JJ7ftn{uy{Jc(^&#34;;;~^)!&#34;;!/**;;r)!^r^&#34;(*r(_||[[)&lt;[[jY&lt;7=c71t7snnCnhs{UkzX4%swow3XGkKhU$W4999WEBdB9##@NWB&amp;9@@@6@@H@Nz@&amp;5@9@@@Q@WW$@@@$#QBBXMW##@A# @@Hd6@&amp;MF#@e505Z@$M$5WR@@6&amp;@3@QN@Q6@M06&amp;S%Vhsxfcf7j[&lt;))*)(_(!r*^+r*&gt;+&gt;/_&gt;_++&gt;[Lxunt7)(~*!~|;r__+|ll=7JzkhkwzhoyyzsoyhuhwUFk44x+/(;&#34;;~&gt;:&#34;!&#34;~+~!!_r^_*(+[&lt;^+|*&gt;r7&lt;[c]iLLjTY}t1}{}nt{{fyFsuyoGze3XHHXXK45&amp;6ME9B9@#B@6@#@dR5@B@@QO9W@@WD@@P0@K@0@$$&amp;@6A#d&amp;B$W#NQ@@BX@ @DZRMR9BDR@dNRWdE0M@R9&amp;WMNMQh#N#WR&amp;&amp;B&amp;WOGSkhuuu}t1=L[Y++/(_r*(&gt;*&lt;+(r|Y*_(r/r|+/cfyVV11lr+&lt;(*r)&lt;71xxk}X%U4HeGOAH$eZUGoee4GUSe4fYr!+^^;(~:;^&#34;;|;(_(|r+|]/|+[j[|][]+[Yjj=jc1nxufifVfzFzh%SeowHu4KXZHVGAPER60EN9dN##9#@@EN@&amp;W@@e@0E@RWQB#@@R@WBW@@VRN@K@ZM9@AZW6E9NR@ RDA4Q&amp;O&amp;%NPM@F@#W0M#NQ6W69MP9V@9@9#@9@@R$K3eVk3nsui=LYL&lt;|||&lt;&lt;&gt;]L+)l*&lt;/&gt;(r/!_]_&lt;+(c=}zku=YJLj=iC1zoU4knUZAEhEHX%940wPAzOdDPyXzjYr)r~*;_^&#34;^;!&#34;/;/^(r_/)/++)&gt;r[|&lt;]&lt;L&lt;cL7177uTx}CTzCus{VwC4XteSeUHkKEUOD$EGA90W9d9WB6M@M@@@@MQ@@5E@@@#@@@X@@W@0@W5@e@6Z5$N@0W6@@Q@@B@ Zd&amp;wM9Q0ZGH@@N$M#N60EREN6RW9@V@@N0WW@9@MMPKkkyshJT}7=7L]l])l&gt;]Y&lt;&lt;&lt;])&lt;r()(r^*+&#34;!;r~^;&#34;)[fzk}FyxXuSPPeOyA4AOSGGOXZS$ASDSZZ3UuFu7=&gt;);r;!;(;*_&lt;(*lr&gt;+)+[&lt;]&gt;l][]7&lt;L==Lj{Y7i11{}}sCf{{sUzyw4kuy4UD4e4OGZ5HKR5$dQWNB9@N@dNM@@#E@@@@Z@@@NK@@@G@@NW@@$e9A@R$D#Q3H@@W@3@N@$ @N@h&amp;MW60P#@@@0@@d@@E6hDR9@S&amp;6@0@09N@#$@BdPK%%4%s{fT7i=Lll[7L&lt;]]l&lt;=]&lt;+r&gt;(**_;(!^*;:,:;_)lJfwuZP3XGSZdyDwQOSG$GGShAPeHSP4hzuf=J=&lt;++&lt;(/r+*+]&lt;]&lt;[&gt;][L[[+Y&lt;]Ll[L[lj]c7i117f1}fsCutCfyozVVw4sskXUGFeVHeO$EQ56&amp;@QM$N&amp;#@@EBN@0M@#W@@@@@B@@d@@@#@G@@@X@@@MdQQW9#@MW@AR@@X @RQMzRE65%#@W@Q@@$@MWWM9#6&amp;DMA@W&amp;DQ@@DW90QdeUhywhUsTi77TYn=nYjjL[1[[l+&gt;+rr*_*;(&#34;;~;&#34;-)&#39;~_;)rYiCX%PZH5%HhA5%ZXkX%34CkwCxt}1ij]=Y(++|+())(&gt;]&lt;&lt;]&gt;7[]=&gt;7&gt;=&lt;YL==]j[Yi]===7=xJfszs{suCyFTzzVXuwkokOCAyKekZDA0E9QEW#6R#B#@@6@B@@@QQ@@BS#@@d@@@O0@k@@w@&amp;0@e@N@39@N$6@N@0O MQde5FQeZX@6@e@@#N&amp;R#&amp;#N&amp;@@d#ZD&amp;@oE@KWE6N@0AGUsz4wu{i1f1171jLj=7lYj=Y]][|(/)_(!*_;!&#34;;;^~*:^&lt;]Y1fyuhkX%whUX%U%hytVsxxJ7jcY==L]][]L]=[&lt;[[&lt;]]J1jj[1[1]=j]YYl][]j=&lt;Y1=j=7it7cuxysCfsfz}hwhVoCoyU3h34XAeH50$RQN6#R@M&amp;#@@ME#@N@@@W@@@9@@$W@@@X@6@@@dM@A&amp;6@W@MO@@H@N@@z@ M$W3WH&amp;GHBMN@oR@@MHM0NEM9QQD66N&amp;MO%@@6E@W0EQPeykxffcx11it1j1Yj=tYT&lt;7[jY[]](+)/**/*!^*~!;*^/|&lt;lc1CfuxxnxJxxszCufT}xJn7T1=1=Y=[[l=7=j=jcLlin71nJj}t71=7cj1]=&lt;&lt;[7&lt;7=Yn71Tf1nszzy{hFuuwVVzkokVnX3kzehAD3O5D0R$NN6E#@MB@$@@#@#BQ@@@##&amp;@@U@@@Bd@@@WG@$@BNFWd$9@DH69M@e@ Gk@d$HEEK&amp;Q9#KdBQWH@WNN0E@OOORQQ5@w@Q@NdEdEQEAUsUunTjT1=17T==[J1Lt[&lt;Y[L[Y]=&lt;l|(&lt;*(_!_~^&#34;;~)/]|[77jc77=71J7}}}fju1{7n7ii=1j77c7ci111JTJn}tuJ{{ttJ1Y1LY]&lt;]]jj[lL&lt;Y&lt;1]1YiT1JtTfxfshfCs4Uhh%uUzVSwF%Z3DAQOOQ9E9MW#NWN@&amp;#@M@@9@@B@@@@BW@@@Q@O@@@@B@WOWB@UMWM@&amp;B@PW@@0W Q9&amp;Q9y@M&amp;X@O@@h@Q&amp;$REDMAdM9D596B&amp;@%@@ER5EW#&amp;R&amp;Zhknnn7t1j=Y7[L]]tijiY1=cii}Ji7Y+l/(/&lt;&gt;/*|(+r/&lt;/rY&lt;][]L=[111{}}f}n1ti}tt1iTxftJ}nC{uhzwCzxzxCJ{tTi1jY+=]]&lt;[|=[&lt;&lt;+=]7li177f}}f}nufxyCwsko4So3VX0yGHPGUe$0EZR$M69@&amp;MWW@@@@@WW@@@@0@N@B$NQ#@Q@@@&amp;BB6@@e@$@K@5@&amp;@&amp;@@E9# $GQ9$sNRW%R9BHDNdDS#9RHZDAOUE$MMR#&amp;f@B@UW9$M05HUoCyt=T7=L1YY[[[1][TYT7c7yzyV4f}y}cnfJ7Yc7=LjY]+[&lt;lYJJfiffuzsVzz{szyzzFCwks%whFU4kXUwS5DV4ut11u&lt;1[[=&lt;&gt;Y[L&gt;&lt;=Lj&lt;Y[LlLc7njy7}{7ThzzVyuVF%%UXJoXkXhKSGAOOdEMQ6@0E@M#@@#@N#$@@@@@@@&amp;@N&amp;96M6M6$@@A@@@ENWRH@#9G@9&amp;E@5@B@ Q0&amp;E$dU@SZX&amp;WzWdR9Q9&amp;0RBRd0ED&amp;MNB@#ADBE$W9@N@&amp;0ZSzuCt7iJ71Y[YY]Y+&lt;Y1ijuJzuzwU4UAwOZUUKo{hXnt}f1ni1tffnnCwVXkw{o4FkFhUKVXk%%3zekeDREQASUy{T7clJ]+Y&lt;]+]]l=&gt;[[li]lYL=[}[1ccuT{izxsFVyP4UXSZkF%UZo35ZUQdQ&amp;6WQN@N0@@#@@@#@W@@@@@@B@0@@@@AB@@M@@0@96@X#NG@6@@@#@@5@@5@&amp; BHdd$6s0Q94EN5$@36QNRE9QEDXdNNWB@SQMPZEQ4@@ENW5UPAky{{TJ77=[[Y]r]&gt;][lY[7=}tf7=Ylr)/+]TclL%J{funyzkzU3FoXUyUu%w4ky4kV%Sy4%4yHUwwCzt{77=JY=l==c1=[=(l)&gt;&lt;&gt;&gt;[&lt;+&lt;[j]]Y7Li}7}iVJcnVyyuykVUkyzw4yV%S4%ASSdH$D$Q0BM3R6dWWQ@Q#M@B@N@@@@6@W@@dNNM#@6@@OR&amp;MOE6NAW@@@@@A@BA@B d50Q0$do@$D96oQde&amp;DOZ9@N@W5BGRNd4$&amp;WSB@6k@@HN@#d4eehzut1j1l]][[L|&lt;&gt;Yr&lt;++Y+&lt;)&gt;;/^^,,+~l;r;^/^(*_!|&gt;l1=iY[lc171JC177JJ{{ktTn1Tt}t}TYj=[L&lt;=jtlc=&lt;77&gt;](]/&gt;+r&lt;]&gt;]Y]YLLj7if7iioT7hzFfUzXkwXkwkUuoVP$3ZK$AAHERWdBE@6R&amp;6WNW##Q@B#D@@O@5@e@&amp;Nd@@d#@E@W@w@RN6@@$@B0W5GDM$@O $$AE$Z&amp;VAO0MBXDWMRERE9B@B@DQ&amp;B6@@x@@Ke#@KE@R##QMdHeEZUyuJ=ccYcl[&lt;[LY(r1]&lt;+r&gt;_~!;_&#39;:|;&gt;;)+_&gt;***/r()+L|+&gt;_&gt;&gt;&lt;LLct=17cTi}1fu{}un}Tcc7il[Ycc+1[Yl&lt;=+l/T++[]&lt;]l[[7jjc77f7}ttfkxxyVkVhkSSUXkX3SUSUGAXGH$REDBRN#W&amp;&amp;#M@@@@@@@#6N6RE#@@X@NM@@MW@O$B@k@6N@Ed990@HNN@D@@@Q0# sADeROWdF60WwDGN00BEH9NM@#9@NNMM#M$WPD&amp;RD&amp;BNNN$B@MWOKGXhznT171l=lY&gt;Y&lt;&gt;]&gt;r]*&lt;~^~,!~&#34;(*(/]]r]&lt;&lt;&gt;]+&lt;&lt;Y=Y]=][cYcc={Y7TJi}}}TCffyT1ccjcc1lLj=cjc+L&lt;]=&gt;+[])c][]YLjYcY7}7}JfnJ{o}zwCokyX43U%X4X3%Gy$GGKA5dDQ0&amp;A$R6W6WE@&amp;R@@W&amp;@S@&amp;@@#Q6O@@@B6#@69B@y@@E@d@RO5#B@&amp;6&amp;Q@@6W@ UZZPEZE@n&amp;$9%OERPAQB$#$&amp;QW@MQ66RW#G@EM9@@9WdW@5M@NB@&amp;SHewF{tn7cjj}[=]Y&gt;7_|(j~*/;_!_+/+&lt;[r]YY17i1}txJfffnctytCfCf}sF}n{s}stJyi}f7ciTTiicu117i7c=7&lt;jY]L1jl==YntYJiuixxuf{CFyVo%ySw4XkHX4KAZyAFGD0yQA596$E$GN6BB@M@#M@NW@MB&amp;@B#$M@@R6@#6G@QR@DO0@D@Q@6#0Z@Q@#0WEB0&amp;6 OPXKDekHURD6de0HAAE@S@#ME#R@&amp;W96DMP@RdW@ReB0B@&amp;ND@ER6MQHHk4UzufnTi77==][c([Yr)](!&lt;_]r)([++jlccJnVsVFwwUxVyVCyswVsz{utfft{uf1tfJ}1x}T1t=7Tixit=[7L=cc=]jYcTl{7TfTuufF{Cyu%%F4%XU4P3w3SZ5KGU5KsBde9$$&amp;&amp;$&amp;dR&amp;WM6MMB@@@W@M#@RW#@@B9@N$@@WX@@A@@@A@M@@RA@9@QQ@@R@R#0#@ wKGAh0$k6dGD6d$eR$$Q6X@0B@#RW@95BB@ORRQ9@0NG6@QO9QMKN6@NMD5SU%ssCz1tT77J[L77]&gt;+r(_&lt;++**+*]&lt;[YYc=tnCx{zff{nf7u1JtCuJnJ111JTT1xJ7ziu77tn17Tt1jJJ1Y1Ycc=YJ=1J=ftf{{{}zukyhywUwk3AXG4ePZh5ASZXAKzQOZ0$dE9NMANM6&amp;B&amp;@ME@@R@@@e@@W#65@R@O@ddE6H9@@9@@P@@P@@9@RM@B#@@R6R9 $U9dOONGSR0$9NRA@0M9@D&amp;#@#Q@MB&amp;&amp;QM@NM#&amp;9@5@U@6NNd@BMWWW#OQ#NPRyhk%fstt7JYnlt&gt;]l|(*(=)/^&gt;~_)+&lt;&gt;&lt;&lt;[Yl=c71=cYci}11j777lt[Tl==L[T=Tt11fTiJJ1TT}fJtntY=}7iin7nt1CuCfVCyykP%3X3SKSPGSd5GK$O$eDXoDAXEEw&amp;HRWR6#90WM@@R@@6@@BE@@5@M@U#k@@N@@@S@#4DW6Q@0R@@@9@R@M@@E@@M@@N@ H$ZzSN99yW65Dd9$N9MB@O@N9@S@@$M#@@@4@RWW@H@4@WN@M@#$@#@6MNB@EM$Mk5eKUy{f}7}cj}&lt;cr&gt;_=(&lt;r+!^*_(!(*||&lt;|+/L/[)&gt;+&lt;+Y&gt;+[[Ll[Ll&lt;c;j7lz1c77f1s1J17}u=1J711t}TxfisCJC{ksVzkkS%KP%XA3%DAPDAAZG$Z0DEFRSkMHHWQ&amp;6$#@@9N@@@@@@Q@@@#@@4@@@R@B$@@NW@H@@@P@@@d5@&amp;@@9$M@@M6#@@@@#N# TSeXo9dKXe6&amp;9NKRdBQWNdMBNRW6&amp;#ERQ@MNM@W@NQK&amp;ZK5@AW&amp;ONWW&amp;6WMWZ#M9$k0OeUXy{i{=LcLlr+;L;*;|:,&#34;~:,^:;:;-&#34;/,//,;&#34;_/+^*)))&lt;|+&lt;[l!L&lt;=tYY1=t1uj}17Yx7cxcTu=Tt1CxVzuyuyFkwUk3UZXGS3eAzOHGDA$OP$DADSDePN9eQQ6OR6B@6@@@@@R@&amp;@@@NW@@@@9@#@6O@@P@N@0@6@@@X@6N@R@@Z@G@X@@@S@@@&amp; xHAKHwXA3eS9QDOW5A&amp;@P&amp;Q6Q#@dRB0Eo@N@@d6MR@WMu@Rd&amp;@oBDWWh@RMR@AWB@U@0M$DAeSufTTc=]&gt;r(*&gt;-;_^&#34;:~,*-/-_:(,&#34;~^:-;&#34;/(/*rr|l[Y7=(&lt;&lt;}]7tjJ1}11j=71=tT}uJtfxC}{fyFkzFhXhUkSK5XSZOA3PeSG55Od$H5EAHDHeAk$0Z5E9B9MB@e@RM@@M@@B@@@RBWQ@@@@@@MM@Q@{@$@#o@@0@B@@0@@N@@@N@6@C@$6@ uPSZhSARZOZdAUAR9P@@H@EDQQ@dQMQ$X@W9NWdQWNN66Q#9N6D#M9#S@EAW@K@9@$@@S&amp;GdQdGSknx1jl]]/(_;(/-,&#34;:&#34;,(^^;:&#34;-!:~^~^~!;)*|(LcL[ljj]l}i]1n=1x=nfJtJ1xztuJs}CysyUVUkwkXXFZOXXeG$ZAGO$5O0GdAHHAWS$KE$9udEEdWWMB6M@@B@W@@kA@6@EMEBA@@Q@@6@@K@@A@@@@@@O@&amp;G6@S#D@@@O69@0##@N@B FPA3GU0EA3Ad9GR&amp;Zd@QE@6Q#0@DM&amp;9DP@6Q@6$B@H6@WRBE#&amp;@@M@@Gd@MN@k0&amp;BN@@Q$MME0A0DS4F1}7[L&gt;+^/;;^,_;^~^_~^^,r-,!&#34;_;/(~&gt;]]L&lt;/{(111cTll=fiJyTiJisnft}sCoF%kXVwyPXU4HPPeXAAD$dA0dA$HOSZe$A5AH$46AQ$6oeAW@5W#NNEW@&amp;@W@@@h@M@@@@@RM#@dN@@@@@@96%@BBG@B6ER@@@M&amp;@@QR@R@@@o&amp;@@ FPSGw$PH5C0$DNoH&amp;GWARNeKE5B0AD6Q$@EN@$$d&amp;&amp;#MHR&amp;o5QN@M6N9AMM6@X#RMG@@D0M0&amp;AN$Hd5PhJzLji[r]/**;*(^;;*;*^:_^;(*(r|)(YL|J=jt=L]uj1&gt;x7fttss7tCuuzwVyFewwkUAwXD$4AeS4AeA5AK55O0eD59X5DZGAP5SAA$ARRK9Z@6ONWRW@E#@@6@6@B@0@BB@eWH@$@M##@&amp;@NRQBN@Z@@$@NWBd@@NO@D@@&amp;@@R9@@@ KhDAQV0$DOhdA0Q4#EM6Sd5&amp;9&amp;&amp;d$M6e9R5@@5EdEEREH06D0@#W&amp;N9@E@9@Oo@9MdW&amp;@9@BB9@X@&amp;O6RH{%Cz=&lt;L&gt;|]r([/&lt;_||r__/~*!)*&lt;&lt;[!}r1Y)&lt;=jc=71i7nxn{uzw{yoohok%UoAXZ3eP4XP3XXPeX$HH555AS0O55AXDOANURkE$5QX@60A@kMW6@9B9@@9@@M@&amp;B@@9e6@@M@@@@&amp;@@&amp;@@&amp;@@N@0@@@N@@@#@#W0ENQ@G@@#R@&amp;B0@ 3uBKH6wRDNzE0EDSBR0&amp;NWFW6NQRQDK@6MQ@B$QdQdZ69EAPN&amp;Q@EdRWN@d@&amp;X@&amp;&amp;&amp;0##@dB&amp;QMA9R$e@dyNAyFC7iY7=&lt;]l|[()[&lt;&lt;L)Y&lt;jl=7YL[1t77jTT1=tit{xChhUkohkkUUk%3G3ZKeSXGKXGZZAKOPO5H$0eASH5$AHZEQDAE0HE$QR$WRDA@wMNX@$N&amp;@N9B@B@MA@@W@d@#@@@@@WQ@@@@M@@@@5E@B@@@B@@@@@@@$@o@@#MOXBM@ ZOHAZN9yN@X$dOOS@PB6d@y@&amp;6&amp;RE@N@@#%@6M$@@#DdNSd@@69@@@DNZ@@@@Z@6@@D@@W@&amp;@99EM9dW@0eEQZGkzk{nxicf=L&gt;rTLY7&gt;1l71J1ti7=ucz}zVfuusu{yykX%%UXPXZGZdAG55$eZPDHK3$DZADESdPHZ$KPd$G$DBDRZNNKWP6NN#@NSMBo@@4@6D@@60@@@RWWNBM@#@@@@M@0@@@@@@@W@@@@@d#@@6@@@#@k@@#@Q@@QG@KO6@ 3&amp;Z5OB&amp;uR$06A$9K@V09&amp;QNDN9NMM@@@@$B5MRMN@$6D#0@9BQ6@@ME@$N&amp;@#Ke@M@6@QN@6MW#d&amp;E&amp;R@KOEWd$OwS4yyzyFufiLxiJ{f}}f{nnxu{{kzkukVsVo%k%%S4k%%43SH5KZDGAGZZOGHAAA4SDGSHHOGG55Re$KDeE$G0R9NNkRNd0B0QQ09RG@@EWREBR0$@NNWMBN@@&amp;@W#@@#@99@#@@@@#@@WQ@6@N@@@M@N@W@@@M@@6@H@@$A@ y0$XPd$k5O$5GAeBQhSDN##B@w@@66@D@9$0#@###XB6R$@RNWB@@@@@@@B##dM@M@0@@#@@@M#@Q&amp;#B@dKDWK#o@GDSKSk%oo4XoyhVkFPk4%UywwU%P4Xk4XZk5SSU5X3uSkSSPeeKGFPZe50ADHXSAK$ASSZX5dAGG5d5d00@RBMD@BD$$@6@9Q@GDd9WED00ARAR66%@6&amp;@65@6@@M@@@@M@&amp;@@@@@R@@@@@HMW@@#@@@Q@A@H@@@9@X$W@R@ SAA5QHWGU$RDAQA@00Q&amp;EWQWM6BEM9SMdNW@&amp;@@@@PB#0&amp;NN5@#D@@@N@M6W#6BR0@M9W#9@@NZ@NMGW@$eREd@kWKNSK4MKUdZAoXZSoZSKSPoG3ADzP3Z%Se4UGG3X%oSy5kPP5KS5AGU$ZD$$GZUADGOdOH9CDA$DSRdR$&amp;A$@4@O#E@G656&amp;KW@kO6S@6Bs@EA5MMD36DN690@N9@@R@Nd@$@WW@@0#&amp;W@@@WMRB@@R@@P@&amp;@&amp;Wd#N@@@Z@@$ OyEeG$@QhD5d55$NOee9$@D5@R0R#EN6M@@@@&amp;#@@dE@Md@W69@MW#W@@@@@B#@@EM@e@W@6#@6MB6$5@MQENAWk@dMKMyR6n@D&amp;G{AHX$$4ZGOUGZNneKHDF$SSZKAZ5K$AZd3DADSZS5SAZ$O0A50$6RwD0O69w&amp;eQKM@5&amp;A@$O$R0D9M0G9&amp;6e&amp;ONKWxQNN4ZNH&amp;W0&amp;AWDW&amp;9dWBO@W@#RMBBBR@@B@@@@@M@BQN@@@#@EQ@@@6RA@HQN@@@W% NHGdUADdAKdDED0K#R5XD96Z@0EQM69e@9@#@@0B@@@#Q6ABH@MW6B#@@@@@@d@@6@9@@@@#@Q@WR@WA#@RQNWX9Q0N&amp;@K@@VWP@DzMZRP9H5dAeRKNV6EQ$zMAD5D0AS0O$AHeG5AAEKOdGRddREeKZ&amp;@XBQD$B$%#WPM9E#kR#SMQ#ESQ9GRZ6GE@R&amp;9A3NGB4NAW$0&amp;OW#NWMWRQ&amp;R#M@dW@5@RNO@@9@@@@9@@0@@@6@@N@@@NM@O@N@@39M@ OS5HPUOH&amp;h@$6#@&amp;N0#H#d@9W6@@@o@RQ@@B&amp;BSUHN5@@R@W@&amp;@@#RB@A@@@@@@@@@R@6@@X@@@O@@@#W&amp;@@@ed#&amp;06A@AZ@e@O@W0H96A9oMO@U9dWu&amp;R6MXGK59D5K&amp;0AAQEXP$SRQhBMdVM&amp;GMWeSEWE&amp;BWSMWeEO5@B&amp;&amp;B5MU#R96d5AN$PMBHWQWuRU&amp;Nd$DRdZEdQD666#5@$eME6EO999dN9#@@@@9@W@@@#R@@#@@@@@#@BB@K@@@@F@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@W69Q@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NEEEEEEEQQQQ9&ampamp;RRRRR9&amp;W@@@@@@@@@@@@#WN&amp;9RQRN#@@@@@#BBMMMNNNNMWWBBWMN&amp;&amp;NW@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NQQQQQQQQQQR9&amp;MMMMBB#BN9RRQEE0D5AA55D$0EQQQEEEEE0ddd$DDDD$$$$$0EE0d$DDdQW@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&amp;EEEEEEEEEEE&amp;B#@@@@@@@@9RRQQE00OGGGGGGGGGHA55AHHHHGGGGGGGGGGGGGGHAAHGGGGGGGGHA0#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@6EE00000000006@@@@@@@@@@BQQEEEE00dHGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGA0#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ME000000000000N@@@@@@@@@@@9E0000d$D5HGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGAdB@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WQ000ddddddddd$M@@@@@@@@@@@@0DDOAAHGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGZZZZZZZZZZZGGGGGGGGGZZZZZH0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@6EEEEE00000d$OO9@@@@@@@@@@@@W$HGGGGGGGGGGGGGZZZZZZZZZZZZGGGGGGGGGGGGGGGZeeeeeeKKKKeeZGGZeeeeeKKKeeZHQ@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@REEEEEEEEEEEEE0N@@@@@@@@@@@@@6d$AGGGGGGGGGGGGGZZZZZZZZZZZZGGGGGGGGGGGGGGGZeeeeeKKKKKKKeeZZZeKKKKKKKKeZGA#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@WRQQQQQQQQQEEEEE6@@@@@@@@@@@@@@R0ddOHGGGGGGGGGGGZZZZZZZZZZZZZGGGGGGGGGGGGGGGGZeeeeKKKKKKKKKeeZZeKKKKKKeeeeZGE@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NRRRRRRRQQQQQQQQ&amp;@@@@@@@@@@@@@@@E000d$AGGGGGGGGGGZZZZZZZZZZZZZZGZZGGGGGGGGGGGGGZeeeeKKKKKKKKKKKeeeeeKKKeeeeeeZGA&amp;@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&amp;RRRRRRRRRRRRRRR9@@@@@@@@@@@@@@@MEE000ddOHGGGGGGGGZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZeeeeeKKKKKKKKKKKKeeeKKeeeeeeZZZZZ0@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@W&amp;9999999999RRRRR9B@@@@#BBWWMN66&amp;9REEEE000d$HGGGGGGGGGZZZZZZeeeKKPPS33333SSSSSSPPPKKKKKKKeeeKKKKKKKKKKKKKKKeeeeeeeZZZZH9@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BN&amp;&amp;999999999999999999&amp;999999999999RRQQQEEEE000d$AGGGGGGGZeeeKPSS3X4U%kkohFVyzzzszzzyyVVFhokUX3PKeeeeKKKKKKKKeeeeeeeeeeeZZZZ5@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O@@@@@@@@@@@@@@@@@@6&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;99999999&amp;&amp;&amp;6&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;9RQQQEEEEE000dd5GGGGGZeS3X4U%kkwhFzC{fntTi7c=Yl[&lt;&gt;+]L7{hKHO$0RNB#BBWB@@@@@#9AZeeeeeeeeZZZZG$@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&amp;O@@@@@@@@@@@@@@@@@@@@@@@@#WM6&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;6W#@@@@@@#BBN9RQQQQEEEEE0000d5GGGZePkVFFVyzzsufJ1j[&lt;][jTnVUSAN#@@@@@@@@@@@@@@@@@@@@@@@@@@@&amp;ZZZZZZZZZZZZZZG&amp;@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BH@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@@@@@@@@@@N9RRQQQQEEEE00000dAGZZe3scjnuuzVkUSG5d@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@QZZZZZZZZZZZZZGA0@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&amp;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@N9RRRQQQQEEEE0000dDGZZKXJ^ ~o@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AZZZZZZZZZZZZGH$Q@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@N9RRRRQQQQEEEEE00d$AZeKX= T@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZZZZZZZZZZZZZGH$R@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BW#@@@@@@##BWW####@@@@@@@@@@@@@@@@@@@@@M&amp;9RRRRRQQQQEEEEE00d$Aek&lt; u@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OZZZZZZZZZZZZZGHdQ@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#MN&amp;99&amp;NNNN&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;6NNNMWWWB##@@@@@@@#&amp;&amp;99RRRRRRQQQQEEE000dHzY` 5@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#GZZZZZZZZZZZZZG50R@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BWN&amp;&amp;99RRRRR999999RRRRRRRRRR9999999999&amp;&amp;&amp;&amp;&amp;&amp;@@@@@@M&amp;&amp;999RRRRRRRQQQQEEE0Pu1[&#34;*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@GGGGGGGZZZZZZZZH$EQ@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@6EEW@@M&amp;999RRQQQEEEQRRRQQQQQQQQQQQQQQQRRRRRRRRR99999B@@@@@@B6&amp;99999RRRRRRRQQQQESyCzzk@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@AGGGGGGGGGGGGGGGZGO0E9@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B000E#@@6QQEEEE000dEEEEEEEEEE00EEEEEEEEEEQQQQQQRRRRR6@@@@@@@#N&amp;&amp;9&amp;&amp;&amp;NW@@@@@@@@BK%UXP9@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@5GGGGGGGGGGGGGGGGGGA0ER@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@00000W@@600d$D5AHd0ddddDDDDDDD$dd0000000EEEEEEEQ6@@@@@@@@@@@B@@@@@@@@@@@@@@@@NPKeZ9@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BDGGGGGGGGGGGGGGGGGGGGGdQR&amp;@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@R000EN@@RHGGGGGHAGGGGGGGGGGGGGHAAA5O$dd00009@@@@@@@@@@@@@@@@@@N69&amp;&amp;&amp;&amp;6MWB@@@BZG5$d0QB@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@0HGGGGGGGGGGGGGGGGGGGGGGGDQR&amp;@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@9EEEE6@@@WQDAGGGGGGGGGGGGGGGGGGGGGGGHA$@@@@@@@@@@@@@@@@@@@6RRRR99999&amp;&amp;&amp;6@@@Qdd000000R@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&amp;AGGGGGGHGGGGGGGGGGGGGGGGGGGAQ9&amp;@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@MEEEQQRN@@@@@@W9$HGGGGGGGGGGGGGGGH9@@@@@@@@@@@@@@@@@@@@RQQQQQRRRR99999&amp;@@@Q00000EEEEE&amp;@@@@@@@@@@@@@@@@@@@@@@@@@@@@BNQOAGGGGGGGGGO$$D5AHGGGGGGGGGGGGGH09M@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BM6&amp;&amp;9996W@@@@@@B6d5GeeeeGE@@@@@@@@@@@@@@@@@@@@@@EEEEEEEQQQQRRRR996@@@000EEEEEEEEEE&amp;@@@@@@@@@@@@@@@@@@@B69EdDO5AAHGGGGGGGGA$0000dd$O5555AAAAAHGG$&amp;B@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BWMN&amp;&amp;&amp;6NB@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&amp;$d0000EEEEEQQQQRRRR&amp;@@6EEEEEEEQQQQQQQQ6@@@@@@@@#N&amp;RQEEEE00000000ddd$DD55AOddEE0000000000ddddddddQB@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#BM6&amp;96@@@@@@@@@@@@@@@@@@@@@@dGGAADdd0000EEEQQQRRRRB@@9EEEQQQQQQQRRRRR&amp;MN9RRRRQQQQQQQEEEEEEEEEE0000000000d0EEEEEEEE000000000000N@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@eKeeZZGHDd0000EEEQQQQQQRB@@QQQQQQRRRR99999999999RRRRRRRRRQQQQQQQQEEEEEEEEEEE000QQQQEEEEEEEEEEEEEEEQ#@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ZsVwU3PeGAdd000EEEEQQQQQQQQ@@WRRR9999&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;999999999RRRRRRRRRRQQQQQQQQEEEEEEQQQQQQQQQQQQQQEEEEE9@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@k[=}uwSeGG$000EEEEEEEEQQQQQQ9@@W&amp;&amp;NMB##BWWMNN66&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;999999999RRRRRRRRRRQQQQQQRRRRRRRQQQQQQQQQQQQ6@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##BWWMNN66&amp;&amp;&amp;&amp;&amp;&amp;&amp;999999999RRRRRRRRRRRRRRRRRRRRRRRRRRR#@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#BWWMN66&amp;&amp;&amp;&amp;&amp;&amp;&amp;9999999999999999999&amp;6NNMWB#@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BWWMN66&amp;&amp;&amp;&amp;&amp;&amp;&amp;999&amp;6MB@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##BBWMMW@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#BM&amp;Q0Q6W@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#BBB @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#MQ0DAAHHGGGGGGGGGGGGGGGGGGGGGGHH5$E&amp;N@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#BWWWMMN&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp; @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BR#@@MQEE0d$OOAHGGGGGGGGGGGGGGGGGGGGGGGGGGGGGHAOO$d00EEER&amp;NW#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@M&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp; @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@9RQQQNWMN&amp;9RRQEEE0dDOAHGGGGGGGGGGHHHAAA5OOD$$00000EEEEEEQQQQRRRRR9@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;9999999 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@9QQQQQQQR6NB#BWM69RQQEEd$$$D$$$$d00000EM@@##WWWMN6&amp;&amp;999RRRR9999&amp;&amp;&amp;&amp;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@N&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;9999999999999999999 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@6QQQQQQQQRR&amp;@@@@@@@#BMN99RRQQQEEEQQQQ&amp;@@@@@@@@@@@@@@@@@@@N6NNMWB##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#&amp;99999999999999999999999999999 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@RQQQQQQQR#@@@@@@@@@@@@@@@@@@@@BM66&amp;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@N99999999999999999999999999999999 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@9QQQQRW@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@M99999999999999999999999999999999999 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&amp;QQ6@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@W&amp;999999999999999999999999999999RRRRRRRR @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@W@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@W9999999999999999999999999RRRRRRRRRRRRRRRRRR @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@M&amp;99999999999999999999RRRRRRRRRRRRRRRRRRRRRRRRRR @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@N&amp;99999999999999999999RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@W9999999999999999RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BW6&amp;&amp;&amp;999999999999999RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##WMM66&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;66666&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;N#@@@@@@@@@@@@@BN&amp;99999999999999999999999999999999RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRQQQQQQ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#WWNN&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;999999999999999999999999999999999999999999999999RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRQQQQQQQQQQQQQQ .",
            "url": "https://boply.github.io/fastpages/jupyter/week-6/2022/09/27/Image-Arrays.html",
            "relUrl": "/jupyter/week-6/2022/09/27/Image-Arrays.html",
            "date": " • Sep 27, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Fibonacci with Class",
            "content": "Constants . x1: first number in sequence | x2: second number in sequence | x3: sum on x1 and x2 | n: amount of numbers in sequence | i: count | . For Loop . Loops sequence (fibonacci math) FOR as long as the max number is greater than or equal to the count (i). | . // For Loop public class fibo { public static void main(String[] args) { // n = the number of numbers in sequence int n = 25; int x1 = 0; int x2 = 1; System.out.print(n+ &quot; numbers in sequence: n&quot;); for (int i = 1; i &lt;= n; ++i) { System.out.print(x1 + &quot; &quot;); // x1 = first number, x2 = second number, x3 is the sum of 1 and two. int x3 = x1 + x2; x1 = x2; x2 = x3; } } } fibo.main(null); . 25 numbers in sequence: 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 . While Loop . Loops sequence (fibonacci math) WHILE the max number is greater than or equal to the count (i). | . // While Loop class fibo { public static void main(String[] args) { try { int x1 = 0, x2 = 1, n = 25; System.out.print(n+ &quot; numbers in sequence: n&quot;); int i = 0; while (i &lt; n) { System.out.print(x1 + &quot; &quot;); int x3 = x2 + x1; x1 = x2; x2 = x3; i = i + 1; } } catch (Exception e) { System.out.println(&quot;Input must be an integer &quot; + e); } } } fibo.main(null) . 25 numbers in sequence: 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 . Input . Uses a while loop for takes in the users INPUT instead of a pre-registered max number. | . // Input class fibo { public static void main(String[] args) { Scanner input; input = new Scanner(System.in); System.out.print(&quot;Type in amount of numbers for sequence --&gt; &quot;); try { int n = input.nextInt(); int x1 = 0, x2 = 1; System.out.print(n + &quot; n&quot;); int i = 0; while (i &lt; n) { System.out.print(x1 + &quot; &quot;); int x3 = x2 + x1; x1 = x2; x2 = x3; i = i + 1; } } catch (Exception e) { System.out.println(&quot;Input must be an integer &quot; + e); } } } fibo.main(null) . Type in amount of numbers for sequence --&gt; 25 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 . Recursion . Recalls itself (RECURSES) (fibonacci math) for as long as the max number is greater than the count (i). | . // Recursion public class fibo{ public static int fibonacciRecursion(int x){ if(x == 0){ return 0; } if(x == 1 || x == 2){ return 1; } return fibonacciRecursion(x-2) + fibonacciRecursion(x-1); } public static void main(String args[]) { int n = 25; System.out.print(n + &quot; numbers in sequence: n&quot;); for(int i = 0; i &lt; n; i++){ System.out.print(fibonacciRecursion(i) + &quot; &quot;); } } } fibo.main(null) . 25 numbers in sequence: 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 . Summary . Run Times . For Loop: 0.1 seconds | While Loop: 0.1 seconds | Input: 0.1 seconds disregarding user | Recursion: 0.1 seconds | . Difference between For Loop and While Loop . A For Loop will loop for an already predetermined amount of times. | A While Loop will continue to loop until a condition is no longer met. | . Using Extends . /* * Creator: Nighthawk Coding Society * Mini Lab Name: Fibonacci sequence, featuring a Stream Algorithm * */ import java.util.ArrayList; import java.util.HashMap; import java.util.stream.Stream; /* Objective will require changing to abstract class with one or more abstract methods below */ public class Fibo { String name; // name or title of method int size; // nth sequence int hashID; // counter for hashIDs in hash map ArrayList&lt;Long&gt; list; // captures current Fibonacci sequence HashMap&lt;Integer, Object&gt; hash; // captures each sequence leading to final result /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public Fibo() { this(20); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public Fibo(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } /* This Method should be &quot;abstract&quot; Leave method as protected, as it is only authorized to extender of the class Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ protected void init() { this.name = &quot;Stream&quot;; Stream.iterate(new long[]{0, 1}, f -&gt; new long[]{f[1], f[0] + f[1]}) .limit(this.size) .forEach(f -&gt; this.setData(f[0]) ); } /* Number is added to fibonacci sequence, current state of &quot;list&quot; is added to hash for hashID &quot;num&quot; */ public void setData(long num) { list.add(num); hash.put(this.hashID++, list.clone()); } /* Custom Getter to return last element in fibonacci sequence */ public long getNth() { return list.get(this.size - 1); } /* Custom Getter to return last fibonacci sequence in HashMap */ public Object getNthSeq(int i) { return hash.get(i); } /* Console/Terminal supported print method */ public void print() { System.out.println(&quot;Init method = &quot; + this.name); System.out.println(&quot;fibonacci Number &quot; + this.size + &quot; = &quot; + this.getNth()); System.out.println(&quot;fibonacci List = &quot; + this.list); System.out.println(&quot;fibonacci Hashmap = &quot; + this.hash); for (int i=0 ; i&lt;this.size; i++ ) { System.out.println(&quot;fibonacci Sequence &quot; + (i+1) + &quot; = &quot; + this.getNthSeq(i)); } } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { Fibo fib = new Fibo(); fib.print(); } } Fibo.main(null); . Init method = Stream fibonacci Number 20 = 4181 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34], 10=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55], 11=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89], 12=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144], 13=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233], 14=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377], 15=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610], 16=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987], 17=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597], 18=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584], 19=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Sequence 11 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55] fibonacci Sequence 12 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89] fibonacci Sequence 13 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144] fibonacci Sequence 14 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233] fibonacci Sequence 15 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377] fibonacci Sequence 16 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610] fibonacci Sequence 17 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987] fibonacci Sequence 18 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597] fibonacci Sequence 19 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584] fibonacci Sequence 20 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] . While Loop Extends . public class FiboWhile extends Fibo { public FiboWhile() { this(10); // telescope to avoid code duplication, using default } public FiboWhile(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } static public void main(String[] args) { FiboWhile wFib = new FiboWhile(); wFib.print(); } // Custom init using while loop instead protected void init() { this.name = &quot;While Loop&quot;; int i = 0; // new long array with only 0 long[] f = new long[] {0,1}; //while i is less than the length desired while (i &lt; this.size) { // sets data first, then adds to f this.setData(f[0]); f = new long[] {f[1], f[0] + f[1]}; // adds to counter i++; } } } FiboWhile.main(null) . Init method = While Loop fibonacci Number 10 = 34 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] . Recursion Extends . public class FiboRecur extends Fibo { public FiboRecur() { this(10); // telescope to avoid code duplication, using default } public FiboRecur(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } static public void main(String[] args) { FiboRecur rFib = new FiboRecur(); rFib.print(); } // Recursion function, using int i as a counter protected void recur(long[] f, int i) { // Sets data using beginning value this.setData(f[0]); // Cretes new long f = new long[]{f[1], f[0] + f[1]}; // Adds to counter i++; if (i &lt; this.size) { // Recusion continues if size limit has not been reached this.recur(f, i); } } // Custom init using recursion loop instead protected void init() { this.name = &quot;Recursion&quot;; // Uses int i as a counter for recusion, also creates initial long[] int i = 0; long[] f = new long[] {0,1}; // input long and counter i into recursion function this.recur(f, i); } } FiboRecur.main(null) . Init method = Recursion fibonacci Number 10 = 34 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] . For Loop Extends . public class FiboFor extends Fibo { public FiboFor() { this(10); // telescope to avoid code duplication, using default } public FiboFor(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } static public void main(String[] args) { FiboRecur rFib = new FiboRecur(); rFib.print(); } // Custom init using for loop instead protected void init() { this.name = &quot;For loop&quot;; // creates initial long[] long[] f = new long[] {0,1}; // iterates through until reaches desired length for (int i = 0; i &lt; this.size; i++) { // sets data, then updates f this.setData(f[0]); f = new long[] {f[1], f[0] + f[1]}; } } } FiboFor.main(null) . Init method = Recursion fibonacci Number 10 = 34 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] .",
            "url": "https://boply.github.io/fastpages/jupyter/week-5/2022/09/23/Fibonacci-With-Class.html",
            "relUrl": "/jupyter/week-5/2022/09/23/Fibonacci-With-Class.html",
            "date": " • Sep 23, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Java Arrays",
            "content": "Teddy Bear Loop . Loops through a loop using an array of teddy bears of different designs until there&#39;s no more left in the store. | . import java.util.Random; class TeddyLoop { //The area between class definition and the 1st method is where we keep data for object in Java String [][] teddys; //2D Array: AP CSA Unit 8: 2D array of strings //2D array is like a grid [x][y] // or like a spreadsheet [row][column] /** * Constructor initializes a 2D array of teddys */ public TeddyLoop() { //Storing Data in 2D arrays teddys = new String[][]{ //2D array above is just a name, &quot;new&quot; makes a container (&quot;object&quot;) //Teddy 0 { &quot; ___&quot;, &quot; {~._.~}&quot;, &quot; ( Y )&quot;, &quot; ()~*~()&quot;, &quot; (_)-(_)&quot; }, //Teddy 1 { &quot; ()=()&quot;, //[1][0] &quot; (&#39;Y&#39;)&quot;, &quot; q . p&quot;, &quot; ()_() &quot; }, //Teddy 2 { &quot; ()=()&quot;, //[2][0] &quot; (&#39;:&#39;)&quot;, &quot; d . b&quot;, &quot; ()_() &quot; }, //Teddy 3 { &quot; ()-()&quot;, //[3][0] &quot; (^;^)&quot;, &quot; C C &quot;, &quot; ()_() &quot; }, //Teddy 4 { &quot; ()-()&quot;, //[4][0] &quot; (&#39;&amp;&#39;)&quot;, //[4][1] &quot; c . c&quot;, //[4][2] &quot; ()_()&quot; //[4][3] }, }; } /** * Loop and print teddys in array * ... repeat until you reach zero ... */ public void printPoem() { //begin the poem System.out.println(); System.out.println(&quot;5 distraught Teddy Bears in a Store. nHow many bought? How many more?&quot;); // Random starter array String[] arr={&quot;Don&#39;t worry! &quot;, &quot;Still &quot;, &quot;We have &quot;, &quot;Come quick! &quot;, &quot;Hurry! &quot;, &quot;Just &quot;, &quot;Only &quot;}; // teddys (non-primitive) defined in constructor knows its length int teddyCount = teddys.length; for (int i = teddyCount; i &gt;= 1; i--) //loops through 2D array length backwards { // Random Word Random r=new Random(); int randomWord=r.nextInt(arr.length); //this print statement shows current count of teddys if(i == 1) {// concatenation (+) of the loop variable and string to form a countdown message System.out.println(&quot;Oh no! &quot; + i + &quot; Teddy Bear in the store! n&quot;); } else if(i == 5) { System.out.println(&quot;New shipment! &quot; + i + &quot; Teddy Bears in the store! n&quot;); } else { System.out.println(arr[randomWord] + i + &quot; Teddy Bears in the store! n&quot;); } //how many separate parts are there in a teddy teddy? for (int col = 0; col &lt; teddys[col].length; col++) { for (int row = 0; row &lt; teddyCount; row++) { System.out.print(teddys[row][col]); System.out.print(&quot; t&quot;); } System.out.println(); } System.out.println(); //countdown for poem, decrementing teddyCount variable by 1 teddyCount -= 1; } //out of all the loops, prints finishing messages System.out.println(&quot;All the teddy bears out the door. :(&quot;); System.out.println(&quot;-&quot;); System.out.println(&quot; THE END &quot;); } /** * A Java Driver/Test method that is the entry point for execution */ public static void main(String[] args) { new TeddyLoop().printPoem(); //a new teddy list and output in one step } } TeddyLoop.main(null); . 5 distraught Teddy Bears in a Store. How many bought? How many more? New shipment! 5 Teddy Bears in the store! ___ ()=() ()=() ()-() ()-() {~._.~} (&#39;Y&#39;) (&#39;:&#39;) (^;^) (&#39;&amp;&#39;) ( Y ) q . p d . b C C c . c ()~*~() ()_() ()_() ()_() ()_() Just 4 Teddy Bears in the store! ___ ()=() ()=() ()-() {~._.~} (&#39;Y&#39;) (&#39;:&#39;) (^;^) ( Y ) q . p d . b C C ()~*~() ()_() ()_() ()_() Hurry! 3 Teddy Bears in the store! ___ ()=() ()=() {~._.~} (&#39;Y&#39;) (&#39;:&#39;) ( Y ) q . p d . b ()~*~() ()_() ()_() Come quick! 2 Teddy Bears in the store! ___ ()=() {~._.~} (&#39;Y&#39;) ( Y ) q . p ()~*~() ()_() Oh no! 1 Teddy Bear in the store! ___ {~._.~} ( Y ) ()~*~() All the teddy bears out the door. :( - THE END .",
            "url": "https://boply.github.io/fastpages/jupyter/week-4/2022/09/19/Java-Arrays.html",
            "relUrl": "/jupyter/week-4/2022/09/19/Java-Arrays.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "FRQ 2020 - Methods and Control Structures",
            "content": "Allotted time: 15 minutes (plus 5 minutes to submit) This question involves the use of check digits, which can be used to help detect if an error has occurred when a number is entered or transmitted electronically. The CheckDigit class is shown below. You will write one method of the CheckDigit class. . public class CheckDigit { /** Returns the check digit for num * Precondition: The number of digits in num is between one and six, inclusive. * num &gt;= 0 */ public static int getCheck(int num) { /* implementation not shown */ } /** Returns true if numWithCheckDigit is valid, or false otherwise, * as described in part (a) * * Precondition: The number of digits in numWithCheckDigit is * between two and seven, inclusive. * numWithCheckDigit &gt;= 0 */ public static boolean isValid(int numWithCheckDigit) { /* to be implemented in part (a) */ } // There may be variables and methods not shown. } . (a) Write the isValid method. The method returns true if its parameter numWithCheckDigit, which represents a number containing a check digit, is valid, and false otherwise. The check digit is always the rightmost digit of numWithCheckDigit. The following table shows some examples of the use of isValid. . Method Call Return Value Explanation . getCheck(159) | 2 | The check digit for 159 is 2. | . isValid(1592) | True | The number 1592 is a valid combination of a number (159) check digit (2). | . isValid(1593) | False | The number 1593 is not a valid combination of a number (159) check digit (3) because 2 is the check digit for 159. | . Complete method isValid below. You must use getCheck appropriately to receive full credit. . /** Returns true if numWithCheckDigit is valid, or false * otherwise, as described in part (a) * Precondition: The number of digits in numWithCheckDigit is * between two and seven, inclusive. * numWithCheckDigit &gt;= 0 */ public static boolean isValid(int numWithCheckDigit) . Part A Answer: . public static boolean isValid(int numWithCheckDigit) { // Takes the remainder of dividing by 10 to get the last digit. int lastDigit = numWithCheckDigit % 10; // Divides by 10 to get all the digits in front of the last one. int num = numWithCheckDigit / 10; // Checks if get check returns the same value as the last digit. if(getCheck(num) == lastDigit) { return true; } else { return false; } } . (b) A programmer wants to modify the CheckDigit class to keep track of how many times a call to isValid is made with an incorrect check digit. Any time a call to isValid is made with an incorrect check digit, the count should be increased by one. The programmer would like to implement this change without making any changes to the signature of the isValid method or overloading isValid. Write a description of how you would change the CheckDigit class in order to support this modification. Do not write the program code for this change. Make sure to include the following in your response. . Identify any new or modified variables or methods. | Describe, for each new or revised variable or method, how it would change or be implemented, including visibility and type. | . Part B Answer: . To count how many times the isValid method returns false, a new integer counter field would need to be created for the checkDigit class. Every time, either in the else statement, in the isValid method, or whenever the isValid method returns false within another class or method, this field should be increased by 1. If this field will be accessed within another class, it should be a public field rather than a private field. | .",
            "url": "https://boply.github.io/fastpages/jupyter/week-4/2022/09/16/FRQ-2020.html",
            "relUrl": "/jupyter/week-4/2022/09/16/FRQ-2020.html",
            "date": " • Sep 16, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "If and Expressions",
            "content": "If Statement . Runs a specific set of code if a condition is met. . This conditions can be anything but it primarily composed of variables such as: Booleans | Integers | Floats | Etc... | . | . | . if(condition) { examplecode(); } . If/Else Statement . Runs a specific set of code if a condition is met. OTHERWISE if the condition is not met then it runs a separate set of code. . This conditions can be anything but it primarily composed of variables such as: Booleans | Integers | Floats | Etc... | . | . | . if(condition) { runprimarycodehere(); }else{ runsecondarycodehere(); } . If/Else Example . This is an if statement testing if the variable is below 0. If it is below 0 then it prints a message stating it&#39;s negative. If it&#39;s not above 0 then it prints a message stating it&#39;s positive. | . import java.util.Scanner; Scanner scanner = new Scanner(System.in); int number; System.out.print(&quot;Enter a number: &quot;); // Get input number = scanner.nextInt(); System.out.println(number); // Check if number is less than 0 if(number &lt; 0) { System.out.println(number + &quot; is negative&quot;); }else{ System.out.println(number + &quot; is positive&quot;); } . Enter a number: 15 15 is positive . If-elseIf-else Statement . Runs an if statement for a condition. If the condition is met then a set of code is run. If the condition is not met then a separate if statement is run. If that condition is met then a set of code is ran but if not then the else code is run. . | In this example, we made the positive negative calculator more specific. It now tests if the number is 0 first. If it is then it states that it&#39;s not negative or positive. While if it&#39;s not then it tests if the number is greater than 0 in which case it&#39;s positive. If not then it&#39;s negative. . | . import java.util.Scanner; Scanner scanner = new Scanner(System.in); int number; System.out.print(&quot;Enter a number: &quot;); number = scanner.nextInt(); System.out.println(number); //Check if number equals 0 if(number == 0) { System.out.println(number + &quot; is not negative or positive&quot;); //If it doesn&#39;t then check if number is greater than 0. }else if (number &gt; 0) { System.out.println(number + &quot; is positive&quot;); } else { System.out.println(number + &quot; is negative&quot;); } . Enter a number: -25 -25 is negative . If/Else example with 5 or more Conditions . This is an example of a calculator that identifies if the number is positive or negative and if&#39;s it greater than or less than 100 relative to signs. | . import java.util.Scanner; Scanner scanner = new Scanner(System.in); int number; System.out.print(&quot;Enter a number: &quot;); try { // Get input number = scanner.nextInt(); System.out.println(number); // Check if number is equal to zero if(number == 0) { System.out.println(number + &quot; is 0&quot;); // If it&#39;s not then check if number is greater than 0 }else if (number &gt; 0) { if(number &gt; 100) { System.out.println(number + &quot; is positive and greater than 100&quot;); } else { System.out.println(number + &quot; is positive and less than 100&quot;); } } // If number is less than 0... else if (number &lt; 0) { if(number &gt; -100) { System.out.println(number + &quot; is negative and greater than -100&quot;); } else { System.out.println(number + &quot; is negative and less than -100&quot;); } } } catch (Exception e) { System.out.println(&quot;Input must be an integer&quot;); } . Enter a number: -250 -250 is negative and less than -100 . Switch-case Example . In this example, we see how instead of using if statements, we use cases from inputs. We input a message and then select a number corresponding to a color. This final output then prints your message in your chosen color. | . import java.util.Scanner; Scanner scanner = new Scanner(System.in); int number; String message; //Setup of COLOR variables public static final String RED = &quot; u001B[31m&quot;; public static final String GREEN = &quot; u001B[32m&quot;; public static final String YELLOW = &quot; u001B[33m&quot;; public static final String BLUE = &quot; u001B[34m&quot;; public static final String PURPLE = &quot; u001B[35m&quot;; public static final String CYAN = &quot; u001B[36m&quot;; public static final String WHITE = &quot; u001B[37m&quot;; // Message Input System.out.print(&quot;Enter a message: &quot;); message = scanner.nextLine(); System.out.print(message + &quot; n n&quot;); // Menu for custom color. System.out.print(RED + &quot;0 - Red n&quot;); System.out.print(GREEN + &quot;1 - Green n&quot;); System.out.print(YELLOW + &quot;2 - Yellow n&quot;); System.out.print(BLUE + &quot;3 - Blue n&quot;); System.out.print(PURPLE + &quot;4 - Purple n&quot;); System.out.print(CYAN + &quot;5 - Cyan n&quot;); System.out.print(WHITE + &quot;6 - White n n&quot;); System.out.print(&quot;Enter a number: &quot;); number = scanner.nextInt(); System.out.print(number + &quot; n n&quot;); // Switch-case related to the chosen number. switch(number) { case 0: System.out.println(RED + message); break; case 1: System.out.println(GREEN + message); break; case 2: System.out.println(YELLOW + message); break; case 3: System.out.println(BLUE + message); break; case 4: System.out.println(PURPLE + message); break; case 5: System.out.println(CYAN + message); break; case 6: System.out.println(WHITE + message); break; } . Enter a message: This is a message 0 - Red 1 - Green 2 - Yellow 3 - Blue 4 - Purple 5 - Cyan 6 - White Enter a number: 4 This is a message . De Morgan&#39;s Law . Not (a and b) is the same as (not a) or (not b). In Java this is written as !(a &amp;&amp; b) == !a || !b | Not (a or b) is the same as (not a) and (not b). In Java this is written as !(a || b) == !a &amp;&amp; !b | Or in other words it uses &quot;nots&quot; that are equivalent to other &quot;not&quot; equations. | . int x = 10; int y = 4; if(!(x &lt; 3) || !(y &gt; 2) == !(x &lt; 3 &amp;&amp; y &gt; 2)) { System.out.print(&quot;True&quot;); }else { System.out.print(&quot;False&quot;); } . True .",
            "url": "https://boply.github.io/fastpages/jupyter/week-3/2022/09/10/if-expressions.html",
            "relUrl": "/jupyter/week-3/2022/09/10/if-expressions.html",
            "date": " • Sep 10, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Code.org Key Learning",
            "content": "Code.org Key Learning . PainterPlus allows for custom actions and an advanced painter. For example, turnRight instead of three turnLeft’s. | . . While loops allow code to repeat until a condition is no longer met. | . . Methods allow a creation of custom commands or actions. For example, running and painting in a line. | . . Debug with prints about information. | . . Extends . Sub-class extends to Super-class. . Super-class Painter | Parent-class | . | Sub-class PainterPlus | Child-Class | . | . Objects . Objects are the myPainter and myPainterPlus references that inherit from the Painter class. | Painter is a template class that allows the object to use and create methods which display actions. | . Instantiate with: “ClassName objectName = new ClassName();” Or: “Painter myPainter = new Painter();” . .",
            "url": "https://boply.github.io/fastpages/markdown/week-2/2022/09/03/Code-Learning.html",
            "relUrl": "/markdown/week-2/2022/09/03/Code-Learning.html",
            "date": " • Sep 3, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Object Notebook",
            "content": "// imports allow you to use code already written by others. It is good to explore and learn libraries. The names around the dots often give you a hint to the originator of the code. import java.util.Scanner; //library for user input import java.lang.Math; //library for random numbers public class Menu { // Instance Variables public final String DEFAULT = &quot; u001B[0m&quot;; // Default Terminal Color public final String[][] COLORS = { // 2D Array of ANSI Terminal Colors {&quot;Default&quot;,DEFAULT}, {&quot;Red&quot;, &quot; u001B[31m&quot;}, {&quot;Green&quot;, &quot; u001B[32m&quot;}, {&quot;Yellow&quot;, &quot; u001B[33m&quot;}, {&quot;Blue&quot;, &quot; u001B[34m&quot;}, {&quot;Purple&quot;, &quot; u001B[35m&quot;}, {&quot;Cyan&quot;, &quot; u001B[36m&quot;}, {&quot;White&quot;, &quot; u001B[37m&quot;}, }; // 2D column location for data public final int NAME = 0; public final int ANSI = 1; // ANSI is the &quot;standard&quot; for terminal codes // Constructor on this Object takes control of menu events and actions public Menu() { Scanner sc = new Scanner(System.in); // using Java Scanner Object this.print(); // print Menu boolean quit = false; while (!quit) { try { // scan for Input int choice = sc.nextInt(); // using method from Java Scanner Object System.out.print(&quot;&quot; + choice + &quot;: &quot;); quit = this.action(choice); // take action } catch (Exception e) { sc.nextLine(); // error: clear buffer System.out.println(e + &quot;: Not a number, try again.&quot;); } } sc.close(); } // Print the menu options to Terminal private void print() { //System.out.println commands below is used to present a Menu to the user. System.out.println(&quot;- n&quot;); System.out.println(&quot;Choose from these choices&quot;); System.out.println(&quot;- n&quot;); System.out.println(&quot;1 - Introduction&quot;); System.out.println(&quot;2 - Celsius to Fahrenheit&quot;); System.out.println(&quot;3 - Fibonacci Sequence&quot;); System.out.println(&quot;4 - Even-Odd Calculator&quot;); System.out.println(&quot;0 - Quit&quot;); System.out.println(&quot;- n&quot;); } // Private method to perform action and return true if action is to quit/exit private boolean action(int selection) { boolean quit = false; switch (selection) { // Switch or Switch/Case is Control Flow statement and is used to evaluate the user selection case 0: System.out.print(&quot;Exiting...&quot;); quit = true; break; case 1: System.out.print(&quot;Hey, it&#39;s Braeden!&quot;); break; case 2: Scanner input; double Faren = 0.0; double Cels = 0.0; String FinalOutput; boolean correctDouble; input = new Scanner(System.in); System.out.print(&quot;Enter a temperature in Celsius: &quot;); try { Cels = input.nextDouble(); System.out.println(Cels); correctDouble = true; } catch (Exception e) { correctDouble = false; } input.close(); Faren = ((Cels * 9) / 5) + 32; FinalOutput = Cels + &quot; degrees celsius is equal to &quot; + Faren + &quot; degrees farenheit&quot;; System.out.println( Cels + &quot; degrees celsius is equal to &quot; + Faren + &quot; degrees farenheit&quot;); // for(int i = 0; i &lt; COLORS.length; i++) // loop through COLORS array // System.out.print(COLORS[i][ANSI] + COLORS[i][NAME]); break; case 3: Scanner inputTwo; inputTwo = new Scanner(System.in); System.out.print(&quot;Type in amount of numbers for sequence --&gt; &quot;); try { int N = inputTwo.nextInt(); int x1 = 0, x2 = 1; int count = 0; while (count &lt; N) { System.out.print(x1 + &quot; &quot;); int x3 = x2 + x1; x1 = x2; x2 = x3; count = count + 1; } } catch (Exception e) { System.out.println(&quot;Input must be an integer &quot; + e); } break; case 4: Scanner inputThree = new Scanner(System.in); int num; //Declare a variable System.out.println(&quot;Enter a number:&quot;); num = inputThree.nextInt(); //If number is divisible by 2 then it&#39;s an even number //else odd number if ( num % 2 == 0 ) System.out.println( num + &quot; is even!&quot;); else System.out.println( num + &quot; is odd!&quot;); // System.out.print(&quot;Loading...&quot;); // for (int i = 0; i &lt; 20; i++) { // fixed length loading bar // int random = (int) (Math.random() * COLORS.length); // random logic // try { // Thread.sleep(100); // delay for loading // } catch (Exception e) { // System.out.println(e); // } // System.out.print(COLORS[random][ANSI] + &quot;#&quot;); // } break; default: //Prints error message from console System.out.print(&quot;Unexpected choice, try again.&quot;); } System.out.println(DEFAULT); // make sure to reset color and provide new line return quit; } // Static driver/tester method static public void main(String[] args) { new Menu(); // starting Menu object } } Menu.main(null); . - Choose from these choices - 1 - Introduction 2 - Celsius to Fahrenheit 3 - Fibonacci Sequence 4 - Even-Odd Calculator 0 - Quit - 1: Hey, it&#39;s Braeden! 2: Enter a temperature in Celsius: 27.0 27.0 degrees celsius is equal to 80.6 degrees farenheit 3: Type in amount of numbers for sequence --&gt; 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 4: Enter a number: 12398 is even! 0: Exiting... .",
            "url": "https://boply.github.io/fastpages/jupyter/week-2/2022/09/01/Object-Notebook.html",
            "relUrl": "/jupyter/week-2/2022/09/01/Object-Notebook.html",
            "date": " • Sep 1, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Week 2",
            "content": "Objects . Scanner class to get inputs | Variables set to output. | Print menu for understanding. | . // imports allow you to use code already written by others. It is good to explore and learn libraries. The names around the dots often give you a hint to the originator of the code. import java.util.Scanner; //library for user input import java.lang.Math; //library for random numbers public class Menu { // Instance Variables public final String DEFAULT = &quot; u001B[0m&quot;; // Default Terminal Color public final String[][] COLORS = { // 2D Array of ANSI Terminal Colors {&quot;Default&quot;,DEFAULT}, {&quot;Red&quot;, &quot; u001B[31m&quot;}, {&quot;Green&quot;, &quot; u001B[32m&quot;}, {&quot;Yellow&quot;, &quot; u001B[33m&quot;}, {&quot;Blue&quot;, &quot; u001B[34m&quot;}, {&quot;Purple&quot;, &quot; u001B[35m&quot;}, {&quot;Cyan&quot;, &quot; u001B[36m&quot;}, {&quot;White&quot;, &quot; u001B[37m&quot;}, }; // 2D column location for data public final int NAME = 0; public final int ANSI = 1; // ANSI is the &quot;standard&quot; for terminal codes // Constructor on this Object takes control of menu events and actions public Menu() { Scanner sc = new Scanner(System.in); // using Java Scanner Object this.print(); // print Menu boolean quit = false; while (!quit) { try { // scan for Input int choice = sc.nextInt(); // using method from Java Scanner Object System.out.print(&quot;&quot; + choice + &quot;: &quot;); quit = this.action(choice); // take action } catch (Exception e) { sc.nextLine(); // error: clear buffer System.out.println(e + &quot;: Not a number, try again.&quot;); } } sc.close(); } // Print the menu options to Terminal private void print() { //System.out.println commands below is used to present a Menu to the user. System.out.println(&quot;- n&quot;); System.out.println(&quot;Choose from these choices&quot;); System.out.println(&quot;- n&quot;); System.out.println(&quot;1 - Say Hello&quot;); System.out.println(&quot;2 - Output colors&quot;); System.out.println(&quot;3 - Loading in color&quot;); System.out.println(&quot;0 - Quit&quot;); System.out.println(&quot;- n&quot;); } // Private method to perform action and return true if action is to quit/exit private boolean action(int selection) { boolean quit = false; switch (selection) { // Switch or Switch/Case is Control Flow statement and is used to evaluate the user selection case 0: System.out.print(&quot;Goodbye, World!&quot;); quit = true; break; case 1: System.out.print(&quot;Hello, World!&quot;); break; case 2: for(int i = 0; i &lt; COLORS.length; i++) // loop through COLORS array System.out.print(COLORS[i][ANSI] + COLORS[i][NAME]); break; case 3: System.out.print(&quot;Loading...&quot;); for (int i = 0; i &lt; 20; i++) { // fixed length loading bar int random = (int) (Math.random() * COLORS.length); // random logic try { Thread.sleep(100); // delay for loading } catch (Exception e) { System.out.println(e); } System.out.print(COLORS[random][ANSI] + &quot;#&quot;); } break; default: //Prints error message from console System.out.print(&quot;Unexpected choice, try again.&quot;); } System.out.println(DEFAULT); // make sure to reset color and provide new line return quit; } // Static driver/tester method static public void main(String[] args) { new Menu(); // starting Menu object } } Menu.main(null); . - Choose from these choices - 1 - Say Hello 2 - Output colors 3 - Loading in color 0 - Quit - 1: Hello, World! 3: Loading...#################### 2: DefaultRedGreenYellowBluePurpleCyanWhite 0: Goodbye, World! .",
            "url": "https://boply.github.io/fastpages/jupyter/week-2/2022/08/30/Week-2.html",
            "relUrl": "/jupyter/week-2/2022/08/30/Week-2.html",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Template Notebook 1",
            "content": "Heading 1 . Example notes Sub Notes | . | . Heading 2 . Example notes Sub Notes | . | . public class HelloWorld { public static void main(String[] args) { System.out.println(&quot;Hello World!&quot;); } } HelloWorld.main(null); . Hello World! .",
            "url": "https://boply.github.io/fastpages/jupyter/2022/08/28/Template-Notebook-1.html",
            "relUrl": "/jupyter/2022/08/28/Template-Notebook-1.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Program Info",
            "content": "echo &quot;Python Version&quot; python --version python2 --version echo &quot;&quot; echo &quot;-Java Version-&quot; java --version javac --version echo &quot;&quot; echo &quot;--Anaconda Version--&quot; conda --version conda list | grep &quot;jupyter&quot; . Python Version Python 3.9.12 Python 2.7.18 -Java Version- java 18.0.2.1 2022-08-18 Java(TM) SE Runtime Environment (build 18.0.2.1+1-1) Java HotSpot(TM) 64-Bit Server VM (build 18.0.2.1+1-1, mixed mode, sharing) javac 18.0.2.1 --Anaconda Version-- conda 4.14.0 jupyter 1.0.0 py39hecd8cb5_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39hecd8cb5_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 . echo &quot;-Jupyter Version-&quot; jupyter --version jupyter kernelspec list echo &quot;&quot; echo &quot;npm Version&quot; npm -version . -Jupyter Version- Selected Jupyter core packages... IPython : 8.2.0 ipykernel : 6.9.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 Available kernels: python389jvsc74a57bd031f2aee4e71d21fbe5cf8b01ff0e069b9275f58929596ceb00d14d90e3e16cd6 /Users/boply/.vscode/extensions/ms-toolsai.jupyter-2022.7.1102252217/temp/jupyter/kernels/python389jvsc74a57bd031f2aee4e71d21fbe5cf8b01ff0e069b9275f58929596ceb00d14d90e3e16cd6 python3912jvsc74a57bd0b3b7c4b39c51acaa0ababaac78dafb28c940c1acd38600e6898f44bc93745552 /Users/boply/.vscode/extensions/ms-toolsai.jupyter-2022.7.1102252217/temp/jupyter/kernels/python3912jvsc74a57bd0b3b7c4b39c51acaa0ababaac78dafb28c940c1acd38600e6898f44bc93745552 bash /Users/boply/Library/Jupyter/kernels/bash java /Users/boply/Library/Jupyter/kernels/java javascript /Users/boply/Library/Jupyter/kernels/javascript python3 /Users/boply/opt/anaconda3/share/jupyter/kernels/python3 npm Version 6.4.1 .",
            "url": "https://boply.github.io/fastpages/jupyter/week-1/2022/08/28/Program-Info.html",
            "relUrl": "/jupyter/week-1/2022/08/28/Program-Info.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Fibonacci Sequence",
            "content": "class Fibo { public static void main(String[] args) { Scanner input; input = new Scanner(System.in); System.out.print(&quot;Type in amount of numbers for sequence --&gt; &quot;); try { int N = input.nextInt(); int x1 = 0, x2 = 1; int count = 0; while (count &lt; N) { System.out.print(x1 + &quot; &quot;); int x3 = x2 + x1; x1 = x2; x2 = x3; count = count + 1; } } catch (Exception e) { System.out.println(&quot;Input must be an integer &quot; + e); } } } Fibo.main(null) . Type in amount of numbers for sequence --&gt; 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 .",
            "url": "https://boply.github.io/fastpages/jupyter/week-1/2022/08/28/Fibonacci-Sequence.html",
            "relUrl": "/jupyter/week-1/2022/08/28/Fibonacci-Sequence.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Week 1 Primitives",
            "content": "*Links to all fastpages blogs. . Tigran A. (Partner) . Aarav A. . Vunsh M. . Primitive Data Types . Booleans | Numerics (integers, bytes, ect.) | . Non-Primitive Data Types . Strings | Arrays | . College Board and PBL . Each student captures information in fastpages thinking … how they are going to capture information that will grow to 10 college board units … how they will recognize something as PBL vs College Board. . I will watch video from College Board. | I will practice fastpages whenever I have the time. | I will keep key info and code in Jupyter Notebooks. Notes Template |",
            "url": "https://boply.github.io/fastpages/markdown/week-1/2022/08/26/Week-1.html",
            "relUrl": "/markdown/week-1/2022/08/26/Week-1.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "TT 1.0.0 Tools and Equipment",
            "content": "Hacks . Issue . Part 1 Fastpages . Python Jupyter Notebook | Java Jupyter Notebook | | Github Insights for FastPages | Github Insights for CSA Project | . Part 2 Java Project . . [Spring Portfolio Commit]https://github.com/boply/portfolio/commit/ed9843a440a47ddac64472344b9c368fe6485ef5) | . Issue .",
            "url": "https://boply.github.io/fastpages/markdown/2022/08/22/tools.html",
            "relUrl": "/markdown/2022/08/22/tools.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Python Notebook",
            "content": "print(&quot;Hello World!&quot;) . Hello World! .",
            "url": "https://boply.github.io/fastpages/jupyter/week-0/2022/08/22/PythonNotebook.html",
            "relUrl": "/jupyter/week-0/2022/08/22/PythonNotebook.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Java Notebook",
            "content": "public class HelloWorld { public static void main(String[] args) { System.out.println(&quot;Hello World!&quot;); } } HelloWorld.main(null); . Hello World! .",
            "url": "https://boply.github.io/fastpages/jupyter/week-0/2022/08/22/JavaNotebook.html",
            "relUrl": "/jupyter/week-0/2022/08/22/JavaNotebook.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://boply.github.io/fastpages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post17": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://boply.github.io/fastpages/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  

  
      ,"page2": {
          "title": "About",
          "content": "This website is powered by fastpages 1 &amp; Braeden Copley 2. . Focus and Habits . I’m interested in learning a wide variety of skills which is also why I’m taking this APCSA. | I plan on educating myself more on all my classes so I can not only get better grades but also learn more. | I’ll make sure to manage my mental health and avoid the common trap that students find themselves in. . | Interests and Skills Video Games | Gym | Computers | APCSA Fastpages | AWS | Juypter Notebooks | Instantiating an Object | Java Classes | Java Objects | Bash Commands | If Expressions | While/For loops | Markdown | Arrays | ASCII Text | Answering Methods and Control Structures FRQs | Working with a team using Slack, Github and Discord. | . | . | . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . | he/him, BRAY-DEN &#8617; . |",
          "url": "https://boply.github.io/fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page3": {
          "title": "Quiz",
          "content": "How many bones are in the human body? . 96 | 193 | 206 | 309 | . | How many states are there in America? . 48 | 50 | 52 | 60 | . | What year did World War II end? . 1896 | 1918 | 1942 | 1945 | . | . Check Your score is -/3 .",
          "url": "https://boply.github.io/fastpages/quiz.html",
          "relUrl": "/quiz.html",
          "date": ""
      }
      
  

  

  

  
  

  
  

  
  

  
  

  

  
  

  
      ,"page12": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://boply.github.io/fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}